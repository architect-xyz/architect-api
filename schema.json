[
{
  "$schema": "jsonschema",
  "name": "Health",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Health/Check",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckRequest",
        "type": "object",
        "properties": {
          "include_metrics": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "service": {
            "description": "The service to check status for; if not provided, status of the queried server overall is returned.\n\nGenerally, this will only be set when querying the API gateway.  It's not recommended to rely on internal subservice names being stable.",
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckResponse",
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "metrics": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": {
              "$ref": "#/definitions/HealthMetric"
            }
          },
          "status": {
            "$ref": "#/definitions/HealthStatus"
          }
        },
        "definitions": {
          "HealthMetric": {
            "type": "object",
            "required": [
              "timestamp",
              "value"
            ],
            "properties": {
              "should_be_greater_than": {
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              },
              "should_be_greater_than_or_equal_to": {
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              },
              "should_be_less_than": {
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              },
              "should_be_less_than_or_equal_to": {
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              },
              "timestamp": {
                "type": "integer",
                "format": "int32"
              },
              "value": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "HealthStatus": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "SERVING",
              "NOT_SERVING",
              "SERVICE_UNKNOWN"
            ]
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Auth",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Auth/CreateJwt",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CreateJwtRequest",
        "description": "Create a session JWT to use for authentication with upstream gRPC services.",
        "type": "object",
        "required": [
          "api_key",
          "api_secret"
        ],
        "properties": {
          "api_key": {
            "type": "string"
          },
          "api_secret": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CreateJwtResponse",
        "type": "object",
        "required": [
          "jwt"
        ],
        "properties": {
          "jwt": {
            "type": "string"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Core",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Core/Config",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ConfigRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ConfigResponse",
        "type": "object",
        "required": [
          "marketdata"
        ],
        "properties": {
          "marketdata": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uri"
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Core/RestartCpty",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "RestartCptyRequest",
        "type": "object",
        "required": [
          "cpty"
        ],
        "properties": {
          "cpty": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "RestartCptyResponse",
        "type": "object"
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Accounts",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Accounts/Accounts",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountsRequest",
        "type": "object",
        "properties": {
          "paper": {
            "default": false,
            "type": "boolean"
          },
          "trader": {
            "description": "Request accounts from the perspective of this trader; if not specified, defaults to the caller user.",
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountsResponse",
        "type": "object",
        "required": [
          "accounts"
        ],
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountWithPermissions"
            }
          }
        },
        "definitions": {
          "Account": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "$ref": "#/definitions/AccountName"
              }
            }
          },
          "AccountName": {
            "type": "string"
          },
          "AccountPermissions": {
            "description": "Set of flags for account permissions",
            "type": "object",
            "required": [
              "list",
              "reduce_or_close",
              "set_limits",
              "trade",
              "view"
            ],
            "properties": {
              "list": {
                "type": "boolean"
              },
              "reduce_or_close": {
                "type": "boolean"
              },
              "set_limits": {
                "type": "boolean"
              },
              "trade": {
                "type": "boolean"
              },
              "view": {
                "type": "boolean"
              }
            }
          },
          "AccountWithPermissions": {
            "type": "object",
            "required": [
              "account",
              "permissions",
              "trader"
            ],
            "properties": {
              "account": {
                "$ref": "#/definitions/Account"
              },
              "permissions": {
                "$ref": "#/definitions/AccountPermissions"
              },
              "trader": {
                "$ref": "#/definitions/UserId"
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Symbology",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Symbology/Symbols",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbolsRequest",
        "description": "List all symbols",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbolsResponse",
        "type": "object",
        "required": [
          "symbols"
        ],
        "properties": {
          "symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/ExecutionInfo",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ExecutionInfoRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "execution_venue": {
            "type": [
              "string",
              "null"
            ]
          },
          "symbol": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ExecutionInfoResponse",
        "type": "object",
        "required": [
          "execution_info"
        ],
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ExecutionInfo"
            }
          }
        },
        "definitions": {
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "exchange_symbol": {
                "description": "If the execution venue has stable symbology, this may be populated",
                "type": [
                  "string",
                  "null"
                ]
              },
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "title": "Base",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "title": "Quote",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "TickSize": {
            "oneOf": [
              {
                "title": "Simple|Decimal",
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "Varying",
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            },
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/Symbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologySnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "execution_info",
          "options_series",
          "products",
          "sid",
          "sn"
        ],
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "product_aliases": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "product_catalog": {
            "default": {},
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ProductCatalogInfo"
              }
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "definitions": {
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "exchange_symbol": {
                "description": "If the execution venue has stable symbology, this may be populated",
                "type": [
                  "string",
                  "null"
                ]
              },
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "title": "Base",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "title": "Quote",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "type": "string"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductCatalogInfo": {
            "description": "Loosely normalized information about exchange products; used to seed symbology loaders and populate extended product info;\n\nSymbology loaders will use catalog fields to augment and/or cross-check any other load source.",
            "type": "object",
            "required": [
              "exchange",
              "exchange_product"
            ],
            "properties": {
              "category": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "exchange": {
                "type": "string"
              },
              "exchange_product": {
                "description": "Could be anything really",
                "type": "string"
              },
              "info_url": {
                "description": "URL to more product info",
                "type": [
                  "string",
                  "null"
                ]
              },
              "long_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "multiplier": {
                "description": "For derivatives contracts, the multiplier",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_display_format": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "quote_currency": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "schedule_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "settle_method": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "short_description": {
                "description": "Short description of the product, suitable for display in a bubble, for example",
                "type": [
                  "string",
                  "null"
                ]
              },
              "sub_category": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "title": "Fiat",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "title": "Commodity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "title": "Crypto",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "title": "Equity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "easy_to_borrow": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "title": "Index",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "title": "Future",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "FutureSpread",
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "title": "Perpetual",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "Option",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "EventContract",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "Unknown",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "title": "Simple|Decimal",
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "Varying",
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            },
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Symbology/SubscribeSymbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeSymbology",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyUpdate",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "sid",
          "sn"
        ],
        "properties": {
          "execution_info": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "options_series": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_OptionsSeriesInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "product_aliases": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String"
              },
              {
                "type": "null"
              }
            ]
          },
          "product_catalog": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ProductCatalogInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "products": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ProductInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "definitions": {
          "AliasKind": {
            "type": "string",
            "enum": [
              "CME_GLOBEX",
              "CFE"
            ]
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "exchange_symbol": {
                "description": "If the execution venue has stable symbology, this may be populated",
                "type": [
                  "string",
                  "null"
                ]
              },
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "title": "Base",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "title": "Quote",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "type": "string"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductCatalogInfo": {
            "description": "Loosely normalized information about exchange products; used to seed symbology loaders and populate extended product info;\n\nSymbology loaders will use catalog fields to augment and/or cross-check any other load source.",
            "type": "object",
            "required": [
              "exchange",
              "exchange_product"
            ],
            "properties": {
              "category": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "exchange": {
                "type": "string"
              },
              "exchange_product": {
                "description": "Could be anything really",
                "type": "string"
              },
              "info_url": {
                "description": "URL to more product info",
                "type": [
                  "string",
                  "null"
                ]
              },
              "long_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "multiplier": {
                "description": "For derivatives contracts, the multiplier",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_display_format": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "quote_currency": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "schedule_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "settle_method": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "short_description": {
                "description": "Short description of the product, suitable for display in a bubble, for example",
                "type": [
                  "string",
                  "null"
                ]
              },
              "sub_category": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "title": "Fiat",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "title": "Commodity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "title": "Crypto",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "title": "Equity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "easy_to_borrow": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "title": "Index",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "title": "Future",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "FutureSpread",
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "title": "Perpetual",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "Option",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "EventContract",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "Unknown",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SnapshotOrUpdate_for_AliasKind_and_SnapshotOrUpdate_for_String_and_String": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_String"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "$ref": "#/definitions/AliasKind"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_String"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ExecutionInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ExecutionInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/ExecutionInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_OptionsSeriesInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/OptionsSeriesInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/OptionsSeriesInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ProductCatalogInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ProductCatalogInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/ProductCatalogInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ProductInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ProductInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/ProductInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ExecutionInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ExecutionInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_SnapshotOrUpdate_for_String_and_ProductCatalogInfo": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ProductCatalogInfo"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ProductCatalogInfo"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_String": {
            "anyOf": [
              {
                "type": "object",
                "required": [
                  "snapshot"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "updates"
                ],
                "properties": {
                  "updates": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "type": "string"
                        },
                        {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                }
              }
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "title": "Simple|Decimal",
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "Varying",
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            },
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/UploadSymbology",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyRequest",
        "type": "object",
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "product_aliases": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          }
        },
        "definitions": {
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "type": "string",
                        "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "exchange_symbol": {
                "description": "If the execution venue has stable symbology, this may be populated",
                "type": [
                  "string",
                  "null"
                ]
              },
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "title": "Base",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "title": "Quote",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "type": "string"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PriceDisplayFormat": {
            "type": "string"
          },
          "ProductInfo": {
            "type": "object",
            "required": [
              "product_type"
            ],
            "properties": {
              "price_display_format": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/PriceDisplayFormat"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "primary_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "product_type": {
                "$ref": "#/definitions/ProductType"
              }
            }
          },
          "ProductType": {
            "oneOf": [
              {
                "title": "Fiat",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "title": "Commodity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "title": "Crypto",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "title": "Equity",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "easy_to_borrow": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "title": "Index",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "title": "Future",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "series": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "FutureSpread",
                "type": "object",
                "required": [
                  "legs",
                  "product_type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "title": "Perpetual",
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "product_type"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "title": "Option",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "EventContract",
                "type": "object",
                "required": [
                  "instance",
                  "product_type",
                  "series"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "series": {
                    "type": "string"
                  }
                }
              },
              {
                "title": "Unknown",
                "type": "object",
                "required": [
                  "product_type"
                ],
                "properties": {
                  "product_type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "title": "Simple|Decimal",
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "Varying",
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            },
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/PruneExpiredSymbols",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsRequest",
        "type": "object",
        "properties": {
          "cutoff": {
            "description": "If None then it will just use server current time; otherwise, specify a unix timestamp in seconds",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/UploadProductCatalog",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadProductCatalogRequest",
        "type": "object",
        "required": [
          "exchange",
          "product_catalog"
        ],
        "properties": {
          "exchange": {
            "type": "string"
          },
          "product_catalog": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ProductCatalogInfo"
            }
          }
        },
        "definitions": {
          "ProductCatalogInfo": {
            "description": "Loosely normalized information about exchange products; used to seed symbology loaders and populate extended product info;\n\nSymbology loaders will use catalog fields to augment and/or cross-check any other load source.",
            "type": "object",
            "required": [
              "exchange",
              "exchange_product"
            ],
            "properties": {
              "category": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "exchange": {
                "type": "string"
              },
              "exchange_product": {
                "description": "Could be anything really",
                "type": "string"
              },
              "info_url": {
                "description": "URL to more product info",
                "type": [
                  "string",
                  "null"
                ]
              },
              "long_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "multiplier": {
                "description": "For derivatives contracts, the multiplier",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_display_format": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "quote_currency": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "schedule_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "settle_method": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "short_description": {
                "description": "Short description of the product, suitable for display in a bubble, for example",
                "type": [
                  "string",
                  "null"
                ]
              },
              "sub_category": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadProductCatalogResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Symbology/DownloadProductCatalog",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DownloadProductCatalogRequest",
        "type": "object",
        "required": [
          "exchange"
        ],
        "properties": {
          "exchange": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DownloadProductCatalogResponse",
        "type": "object",
        "required": [
          "product_catalog"
        ],
        "properties": {
          "product_catalog": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ProductCatalogInfo"
            }
          }
        },
        "definitions": {
          "ProductCatalogInfo": {
            "description": "Loosely normalized information about exchange products; used to seed symbology loaders and populate extended product info;\n\nSymbology loaders will use catalog fields to augment and/or cross-check any other load source.",
            "type": "object",
            "required": [
              "exchange",
              "exchange_product"
            ],
            "properties": {
              "category": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "exchange": {
                "type": "string"
              },
              "exchange_product": {
                "description": "Could be anything really",
                "type": "string"
              },
              "info_url": {
                "description": "URL to more product info",
                "type": [
                  "string",
                  "null"
                ]
              },
              "long_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "multiplier": {
                "description": "For derivatives contracts, the multiplier",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_display_format": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "quote_currency": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "schedule_description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "settle_method": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "short_description": {
                "description": "Short description of the product, suitable for display in a bubble, for example",
                "type": [
                  "string",
                  "null"
                ]
              },
              "sub_category": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Marketdata",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "best_ask",
            "description": "(price, quantity)",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "title": "best_bid",
            "description": "(price, quantity)",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "rt": {
            "title": "recv_time",
            "description": "Time that Architect feed received the message; only set if streaming from direct L1 feeds",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "rtn": {
            "title": "recv_time_ns",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Array_of_L1BookSnapshot",
        "type": "array",
        "items": {
          "$ref": "#/definitions/L1BookSnapshot"
        },
        "definitions": {
          "L1BookSnapshot": {
            "type": "object",
            "required": [
              "s",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "best_ask",
                "description": "(price, quantity)",
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "b": {
                "title": "best_bid",
                "description": "(price, quantity)",
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "rt": {
                "title": "recv_time",
                "description": "Time that Architect feed received the message; only set if streaming from direct L1 feeds",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "rtn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "best_ask",
            "description": "(price, quantity)",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "title": "best_bid",
            "description": "(price, quantity)",
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "rt": {
            "title": "recv_time",
            "description": "Time that Architect feed received the message; only set if streaming from direct L1 feeds",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "rtn": {
            "title": "recv_time_ns",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL2BookUpdates",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL2BookUpdatesRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookUpdate",
        "description": "To build a book from a stream of updates, the client should first subscribe to this update stream, which then returns a stream starting with a snapshot and following with diffs.\n\nDiffs should be applied consecutively to the snapshot in order to reconstruct the state of the book.\n\n```rust # use architect_api::marketdata::*; # use std::collections::BTreeMap; # use rust_decimal::Decimal; # use rust_decimal_macros::dec;\n\n/// Suppose we receive this snapshot from the server: let snapshot: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"s\", \"ts\": 1729700837, \"tn\": 0, \"sid\": 123, \"sn\": 8999, \"b\": [[\"99.00\", \"3\"], [\"98.78\", \"2\"]], \"a\": [[\"100.00\", \"1\"], [\"100.10\", \"2\"]] }\"#)?;\n\n/// It corresponds to the following book: let mut book = BTreeMap::new(); book.insert(dec!(99.00), 3); book.insert(dec!(98.78), 2); book.insert(dec!(100.00), 1); book.insert(dec!(100.10), 2);\n\n/// Then we receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700839, \"tn\": 0, \"sid\": 123, \"sn\": 9000, \"b\": [[\"99.00\", \"1\"]], \"a\": [] }\"#)?;\n\n/// Verify that the sequence number is correct assert!(diff.sequence().is_next_in_sequence(&snapshot.sequence()));\n\n/// Apply the update to our book book.insert(dec!(99.00), 1);\n\n// Suppose we then receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 123, \"sn\": 9005, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// We shouldn't apply this update because it's not next in sequence! assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n/// Or if we had received this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 170, \"sn\": 9001, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// It appears that the sequence id is changed, signalling a new sequence. /// In this case, we should re-request the snapshot from the server. assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n# Ok::<(), anyhow::Error>(()) ``` <!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "Snapshot|L2BookSnapshot",
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "asks",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    },
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "title": "bids",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    },
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "title": "sequence_id",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "sn": {
                "title": "sequence_number",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "s"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "title": "Diff|L2BookDiff",
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "title": "asks",
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    },
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "title": "bids",
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    },
                    {
                      "type": "string",
                      "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "title": "sequence_id",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "sn": {
                "title": "sequence_number",
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "d"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L2BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshotRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "a",
          "b",
          "sid",
          "sn",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "title": "asks",
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                },
                {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "b": {
            "title": "bids",
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                },
                {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "sid": {
            "title": "sequence_id",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "title": "sequence_number",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeCandlesRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "candle_widths": {
            "description": "If None, subscribe from all candle widths on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/CandleWidth"
            }
          },
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ah": {
            "title": "ask_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "al": {
            "title": "ask_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ao": {
            "title": "ask_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "av": {
            "title": "sell_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bc": {
            "title": "bid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bh": {
            "title": "bid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bl": {
            "title": "bid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bo": {
            "title": "bid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bv": {
            "title": "buy_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "c": {
            "title": "close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "h": {
            "title": "high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "l": {
            "title": "low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mc": {
            "title": "mid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mh": {
            "title": "mid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ml": {
            "title": "mid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mo": {
            "title": "mid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "o": {
            "title": "open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeManyCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeManyCandlesRequest",
        "type": "object",
        "required": [
          "candle_width"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ah": {
            "title": "ask_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "al": {
            "title": "ask_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ao": {
            "title": "ask_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "av": {
            "title": "sell_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bc": {
            "title": "bid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bh": {
            "title": "bid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bl": {
            "title": "bid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bo": {
            "title": "bid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bv": {
            "title": "buy_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "c": {
            "title": "close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "h": {
            "title": "high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "l": {
            "title": "low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mc": {
            "title": "mid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mh": {
            "title": "mid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ml": {
            "title": "mid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mo": {
            "title": "mid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "o": {
            "title": "open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeCurrentCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeCurrentCandlesRequest",
        "description": "Subscribe to the current candle.  This allows you to display the most recent/building candle live in a UI, for example.",
        "type": "object",
        "required": [
          "candle_width",
          "symbol"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "symbol": {
            "type": "string"
          },
          "tick_period_ms": {
            "description": "If None, send the current candle on every trade or candle tick. Otherwise, send a candle every `tick_period_ms`.",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "s",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "title": "ask_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ah": {
            "title": "ask_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "al": {
            "title": "ask_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ao": {
            "title": "ask_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "av": {
            "title": "sell_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bc": {
            "title": "bid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bh": {
            "title": "bid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bl": {
            "title": "bid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bo": {
            "title": "bid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bv": {
            "title": "buy_volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "c": {
            "title": "close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "h": {
            "title": "high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "l": {
            "title": "low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mc": {
            "title": "mid_close",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mh": {
            "title": "mid_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ml": {
            "title": "mid_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mo": {
            "title": "mid_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "o": {
            "title": "open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "w": {
            "title": "width",
            "allOf": [
              {
                "$ref": "#/definitions/CandleWidth"
              }
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/HistoricalCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalCandlesRequest",
        "type": "object",
        "required": [
          "candle_width",
          "end_date",
          "start_date",
          "symbol"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "end_date": {
            "$ref": "#/definitions/DateTimeOrUtc"
          },
          "start_date": {
            "$ref": "#/definitions/DateTimeOrUtc"
          },
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "DateTimeOrUtc": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalCandlesResponse",
        "type": "object",
        "required": [
          "candles"
        ],
        "properties": {
          "candles": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Candle"
            }
          }
        },
        "definitions": {
          "Candle": {
            "type": "object",
            "required": [
              "av",
              "bv",
              "s",
              "tn",
              "ts",
              "v",
              "w"
            ],
            "properties": {
              "ac": {
                "title": "ask_close",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ah": {
                "title": "ask_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "al": {
                "title": "ask_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ao": {
                "title": "ask_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "av": {
                "title": "sell_volume",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bc": {
                "title": "bid_close",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bh": {
                "title": "bid_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bl": {
                "title": "bid_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bo": {
                "title": "bid_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bv": {
                "title": "buy_volume",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "c": {
                "title": "close",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "h": {
                "title": "high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "l": {
                "title": "low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mc": {
                "title": "mid_close",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mh": {
                "title": "mid_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ml": {
                "title": "mid_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mo": {
                "title": "mid_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "o": {
                "title": "open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "w": {
                "title": "width",
                "allOf": [
                  {
                    "$ref": "#/definitions/CandleWidth"
                  }
                ]
              }
            }
          },
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              5,
              60,
              900,
              3600,
              86400
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTrades",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTradesRequest",
        "type": "object",
        "properties": {
          "symbol": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "string",
              "null"
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Trade",
        "type": "object",
        "required": [
          "p",
          "q",
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "title": "direction",
            "anyOf": [
              {
                "$ref": "#/definitions/Dir"
              },
              {
                "type": "null"
              }
            ]
          },
          "p": {
            "title": "price",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "q": {
            "title": "size",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/MarketStatus",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatusRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatus",
        "type": "object",
        "required": [
          "s"
        ],
        "properties": {
          "is_quoting": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "is_trading": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/Ticker",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerRequest",
        "type": "object",
        "required": [
          "symbol"
        ],
        "properties": {
          "symbol": {
            "type": "string"
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ticker",
        "type": "object",
        "required": [
          "s",
          "tn",
          "ts",
          "ve"
        ],
        "properties": {
          "ap": {
            "title": "ask_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "as": {
            "title": "ask_size",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bp": {
            "title": "bid_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "bs": {
            "title": "bid_size",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "dividend": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "dividend_yield": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "eps_adj": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "fr": {
            "title": "funding_rate",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ft": {
            "title": "next_funding_time",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "h": {
            "title": "high_24h",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ip": {
            "title": "index_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "isp": {
            "title": "indicative_settlement_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "l": {
            "title": "low_24h",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "market_cap": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "mp": {
            "title": "mark_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "o": {
            "title": "open_24h",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "oi": {
            "title": "open_interest",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "p": {
            "title": "last_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "price_to_earnings": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "q": {
            "title": "last_size",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "sd": {
            "title": "last_settlement_date",
            "type": [
              "string",
              "null"
            ],
            "format": "date"
          },
          "shares_outstanding_weighted_adj": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "sp": {
            "title": "last_settlement_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "title": "volume_24h",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "ve": {
            "title": "venue",
            "type": "string"
          },
          "vm": {
            "title": "volume_30d",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "xh": {
            "title": "session_high",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "xl": {
            "title": "session_low",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "xo": {
            "title": "session_open",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "xv": {
            "title": "session_volume",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/Tickers",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickersRequest",
        "type": "object",
        "properties": {
          "i": {
            "title": "offset",
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "k": {
            "title": "sort_by",
            "anyOf": [
              {
                "$ref": "#/definitions/SortTickersBy"
              },
              {
                "type": "null"
              }
            ]
          },
          "n": {
            "title": "limit",
            "type": [
              "integer",
              "null"
            ],
            "format": "int32"
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "SortTickersBy": {
            "type": "string",
            "enum": [
              "VOLUME_DESC",
              "CHANGE_ASC",
              "CHANGE_DESC",
              "ABS_CHANGE_DESC"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickersResponse",
        "type": "object",
        "required": [
          "tickers"
        ],
        "properties": {
          "tickers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Ticker"
            }
          }
        },
        "definitions": {
          "Ticker": {
            "type": "object",
            "required": [
              "s",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "as": {
                "title": "ask_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bp": {
                "title": "bid_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bs": {
                "title": "bid_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend_yield": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "eps_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fr": {
                "title": "funding_rate",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ip": {
                "title": "index_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "isp": {
                "title": "indicative_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "l": {
                "title": "low_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "market_cap": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mp": {
                "title": "mark_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "o": {
                "title": "open_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "oi": {
                "title": "open_interest",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "p": {
                "title": "last_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_to_earnings": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "last_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "sd": {
                "title": "last_settlement_date",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date"
              },
              "shares_outstanding_weighted_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "sp": {
                "title": "last_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xh": {
                "title": "session_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xl": {
                "title": "session_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xo": {
                "title": "session_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xv": {
                "title": "session_volume",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTickers",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTickersRequest",
        "description": "Ticker updates are not strongly ordered because the data is considered more casual.  You may receive diffs or snapshots slightly out of order.",
        "type": "object",
        "properties": {
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerUpdate",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "Snapshot|Ticker",
            "type": "object",
            "required": [
              "s",
              "t",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "as": {
                "title": "ask_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bp": {
                "title": "bid_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bs": {
                "title": "bid_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend_yield": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "eps_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fr": {
                "title": "funding_rate",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ip": {
                "title": "index_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "isp": {
                "title": "indicative_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "l": {
                "title": "low_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "market_cap": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mp": {
                "title": "mark_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "o": {
                "title": "open_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "oi": {
                "title": "open_interest",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "p": {
                "title": "last_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_to_earnings": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "last_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "sd": {
                "title": "last_settlement_date",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date"
              },
              "shares_outstanding_weighted_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "sp": {
                "title": "last_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "t": {
                "type": "string",
                "enum": [
                  "s"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xh": {
                "title": "session_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xl": {
                "title": "session_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xo": {
                "title": "session_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xv": {
                "title": "session_volume",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "Diff|Ticker",
            "type": "object",
            "required": [
              "s",
              "t",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "as": {
                "title": "ask_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bp": {
                "title": "bid_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bs": {
                "title": "bid_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend_yield": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "eps_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fr": {
                "title": "funding_rate",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ip": {
                "title": "index_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "isp": {
                "title": "indicative_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "l": {
                "title": "low_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "market_cap": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mp": {
                "title": "mark_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "o": {
                "title": "open_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "oi": {
                "title": "open_interest",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "p": {
                "title": "last_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_to_earnings": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "last_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "sd": {
                "title": "last_settlement_date",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date"
              },
              "shares_outstanding_weighted_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "sp": {
                "title": "last_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "t": {
                "type": "string",
                "enum": [
                  "d"
                ]
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xh": {
                "title": "session_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xl": {
                "title": "session_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xo": {
                "title": "session_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xv": {
                "title": "session_volume",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        ]
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeLiquidations",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeLiquidationsRequest",
        "type": "object",
        "properties": {
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Liquidation",
        "type": "object",
        "required": [
          "d",
          "p",
          "q",
          "s",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "title": "direction",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "p": {
            "title": "price",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "q": {
            "title": "size",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "tn": {
            "title": "timestamp_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "timestamp",
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "OptionsMarketdata",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.OptionsMarketdata/OptionsExpirations",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsExpirationsRequest",
        "type": "object",
        "required": [
          "underlying"
        ],
        "properties": {
          "underlying": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsExpirations",
        "type": "object",
        "required": [
          "expirations",
          "underlying"
        ],
        "properties": {
          "expirations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date"
            }
          },
          "underlying": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.OptionsMarketdata/OptionsChain",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsChainRequest",
        "type": "object",
        "required": [
          "expiration",
          "underlying"
        ],
        "properties": {
          "expiration": {
            "type": "string",
            "format": "date"
          },
          "underlying": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsChain",
        "type": "object",
        "required": [
          "calls",
          "puts"
        ],
        "properties": {
          "calls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OptionsContract"
            }
          },
          "puts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OptionsContract"
            }
          }
        },
        "definitions": {
          "OptionsContract": {
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike",
              "ticker",
              "underlying"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date"
              },
              "in_the_money": {
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ticker": {
                "$ref": "#/definitions/Ticker"
              },
              "underlying": {
                "type": "string"
              }
            }
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "Ticker": {
            "type": "object",
            "required": [
              "s",
              "tn",
              "ts",
              "ve"
            ],
            "properties": {
              "ap": {
                "title": "ask_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "as": {
                "title": "ask_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bp": {
                "title": "bid_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "bs": {
                "title": "bid_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "dividend_yield": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "eps_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fr": {
                "title": "funding_rate",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ft": {
                "title": "next_funding_time",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "h": {
                "title": "high_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ip": {
                "title": "index_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "isp": {
                "title": "indicative_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "l": {
                "title": "low_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "market_cap": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "mp": {
                "title": "mark_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "o": {
                "title": "open_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "oi": {
                "title": "open_interest",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "p": {
                "title": "last_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "price_to_earnings": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "last_size",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "sd": {
                "title": "last_settlement_date",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date"
              },
              "shares_outstanding_weighted_adj": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "sp": {
                "title": "last_settlement_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tn": {
                "title": "timestamp_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "timestamp",
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "title": "volume_24h",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "ve": {
                "title": "venue",
                "type": "string"
              },
              "vm": {
                "title": "volume_30d",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xh": {
                "title": "session_high",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xl": {
                "title": "session_low",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xo": {
                "title": "session_open",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xv": {
                "title": "session_volume",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.OptionsMarketdata/OptionsChainGreeks",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsChainGreeksRequest",
        "type": "object",
        "required": [
          "expiration",
          "underlying"
        ],
        "properties": {
          "expiration": {
            "type": "string",
            "format": "date"
          },
          "underlying": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OptionsChainGreeks",
        "type": "object",
        "required": [
          "calls",
          "puts"
        ],
        "properties": {
          "calls": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OptionsGreeks"
            }
          },
          "puts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/OptionsGreeks"
            }
          }
        },
        "definitions": {
          "OptionsGreeks": {
            "type": "object",
            "required": [
              "delta",
              "expiration",
              "gamma",
              "implied_volatility",
              "put_or_call",
              "rho",
              "strike",
              "symbol",
              "theta",
              "underlying",
              "vega"
            ],
            "properties": {
              "delta": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "expiration": {
                "type": "string",
                "format": "date"
              },
              "gamma": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "implied_volatility": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "rho": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "strike": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "symbol": {
                "type": "string"
              },
              "theta": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "underlying": {
                "type": "string"
              },
              "vega": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Orderflow",
  "rpcs": [
    {
      "type": "duplex_stream",
      "route": "/json.architect.Orderflow/Orderflow",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OrderflowRequest",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "PlaceOrder|PlaceOrderRequest",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "d",
              "q",
              "s",
              "t",
              "tif"
            ],
            "properties": {
              "a": {
                "title": "account",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountIdOrName"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "id": {
                "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "p"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "u": {
                "title": "trader",
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/TraderIdOrEmail"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "default": null,
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "title": "CancelOrder|CancelOrderRequest",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "x"
                ]
              },
              "xid": {
                "title": "cancel_id",
                "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "title": "CancelAllOrders|CancelAllOrdersRequest",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "account": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountIdOrName"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "execution_venue": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xo"
                ]
              },
              "trader": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/TraderIdOrEmail"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Orderflow",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "OrderPending|Order",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "w"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "OrderAck|OrderAck",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "a"
                ]
              }
            }
          },
          {
            "title": "OrderReject|OrderReject",
            "type": "object",
            "required": [
              "id",
              "r",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "r": {
                "title": "reject_reason",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  }
                ]
              },
              "rm": {
                "title": "message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "r"
                ]
              }
            }
          },
          {
            "title": "OrderOut|OrderOut",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              }
            }
          },
          {
            "title": "OrderReconciledOut|OrderOut",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "ox"
                ]
              }
            }
          },
          {
            "title": "OrderStale|OrderStale",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "z"
                ]
              }
            }
          },
          {
            "title": "CancelPending|Cancel",
            "type": "object",
            "required": [
              "id",
              "o",
              "t",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/CancelStatus"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xc"
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "title": "cancel_id",
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "title": "CancelReject|CancelReject",
            "type": "object",
            "required": [
              "id",
              "t",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xr"
                ]
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "title": "OrderCanceling|OrderCanceling",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xa"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "title": "OrderCanceled|OrderCanceled",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xx"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "title": "Fill|Fill",
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "agg": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "int"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "type": "string",
                "enum": [
                  "f"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "title": "AberrantFill|AberrantFill",
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Orderflow/SubscribeOrderflow",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeOrderflowRequest",
        "description": "Subscribe/listen to orderflow events.",
        "type": "object",
        "properties": {
          "account": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "default": null,
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Orderflow",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "OrderPending|Order",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "w"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "OrderAck|OrderAck",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "a"
                ]
              }
            }
          },
          {
            "title": "OrderReject|OrderReject",
            "type": "object",
            "required": [
              "id",
              "r",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "r": {
                "title": "reject_reason",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  }
                ]
              },
              "rm": {
                "title": "message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "r"
                ]
              }
            }
          },
          {
            "title": "OrderOut|OrderOut",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              }
            }
          },
          {
            "title": "OrderReconciledOut|OrderOut",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "ox"
                ]
              }
            }
          },
          {
            "title": "OrderStale|OrderStale",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "z"
                ]
              }
            }
          },
          {
            "title": "CancelPending|Cancel",
            "type": "object",
            "required": [
              "id",
              "o",
              "t",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/CancelStatus"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xc"
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "title": "cancel_id",
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "title": "CancelReject|CancelReject",
            "type": "object",
            "required": [
              "id",
              "t",
              "xid"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "rm": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "xr"
                ]
              },
              "xid": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "title": "OrderCanceling|OrderCanceling",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xa"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "title": "OrderCanceled|OrderCanceled",
            "type": "object",
            "required": [
              "id",
              "t"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "t": {
                "type": "string",
                "enum": [
                  "xx"
                ]
              },
              "xid": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              }
            }
          },
          {
            "title": "Fill|Fill",
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "agg": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "int"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "type": "string",
                "enum": [
                  "f"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "title": "AberrantFill|AberrantFill",
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Orderflow/Dropcopy",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DropcopyRequest",
        "type": "object",
        "properties": {
          "aberrant_fills": {
            "default": false,
            "type": "boolean"
          },
          "account": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "default": null,
            "type": [
              "string",
              "null"
            ]
          },
          "fills": {
            "default": true,
            "type": "boolean"
          },
          "orders": {
            "default": false,
            "type": "boolean"
          },
          "trader": {
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Dropcopy",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "Order|Order",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "o"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "Fill|Fill",
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "t",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "agg": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "int"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "t": {
                "type": "string",
                "enum": [
                  "f"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "title": "AberrantFill|AberrantFill",
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "t",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "af"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Oms",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Oms/PlaceOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PlaceOrderRequest",
        "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "k"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "MARKET"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "po"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "po": {
                "title": "post_only",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "STOP_LOSS_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tp": {
                "title": "trigger_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "TAKE_PROFIT_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tp": {
                "title": "trigger_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        ],
        "required": [
          "d",
          "q",
          "s",
          "tif"
        ],
        "properties": {
          "a": {
            "title": "account",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "d": {
            "title": "dir",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "id": {
            "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "pid": {
            "title": "parent_id",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "q": {
            "title": "quantity",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "src": {
            "title": "source",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/OrderSource"
              },
              {
                "type": "null"
              }
            ]
          },
          "tif": {
            "title": "time_in_force",
            "allOf": [
              {
                "$ref": "#/definitions/TimeInForce"
              }
            ]
          },
          "u": {
            "title": "trader",
            "default": null,
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "x": {
            "title": "execution_venue",
            "default": null,
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Order",
        "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
        "type": "object",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "k"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "MARKET"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "po"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "po": {
                "title": "post_only",
                "type": "boolean"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "STOP_LOSS_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tp": {
                "title": "trigger_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "k",
              "p",
              "tp"
            ],
            "properties": {
              "k": {
                "type": "string",
                "enum": [
                  "TAKE_PROFIT_LIMIT"
                ]
              },
              "p": {
                "title": "limit_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tp": {
                "title": "trigger_price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        ],
        "required": [
          "a",
          "d",
          "id",
          "o",
          "q",
          "s",
          "src",
          "tif",
          "tn",
          "ts",
          "u",
          "ve",
          "xq"
        ],
        "properties": {
          "a": {
            "title": "account",
            "type": "string",
            "format": "uuid"
          },
          "d": {
            "title": "dir",
            "allOf": [
              {
                "$ref": "#/definitions/Dir"
              }
            ]
          },
          "eid": {
            "title": "exchange_order_id",
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "$ref": "#/definitions/OrderId"
          },
          "o": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/definitions/OrderStatus"
              }
            ]
          },
          "pid": {
            "title": "parent_id",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "q": {
            "title": "quantity",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "r": {
            "title": "reject_reason",
            "anyOf": [
              {
                "$ref": "#/definitions/OrderRejectReason"
              },
              {
                "type": "null"
              }
            ]
          },
          "rm": {
            "title": "reject_message",
            "type": [
              "string",
              "null"
            ]
          },
          "s": {
            "title": "symbol",
            "type": "string"
          },
          "src": {
            "title": "source",
            "allOf": [
              {
                "$ref": "#/definitions/OrderSource"
              }
            ]
          },
          "ss": {
            "title": "is_short_sale",
            "type": [
              "boolean",
              "null"
            ]
          },
          "tif": {
            "title": "time_in_force",
            "allOf": [
              {
                "$ref": "#/definitions/TimeInForce"
              }
            ]
          },
          "tn": {
            "title": "recv_time_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "recv_time",
            "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
            "type": "integer",
            "format": "int64"
          },
          "u": {
            "title": "trader",
            "allOf": [
              {
                "$ref": "#/definitions/UserId"
              }
            ]
          },
          "ve": {
            "title": "execution_venue",
            "type": "string"
          },
          "xp": {
            "title": "average_fill_price",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "xq": {
            "title": "filled_quantity",
            "type": "string",
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          }
        },
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/CancelOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelOrderRequest",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "title": "order_id",
            "allOf": [
              {
                "$ref": "#/definitions/OrderId"
              }
            ]
          },
          "xid": {
            "title": "cancel_id",
            "description": "If not specified, one will be generated for you; note, in that case, you won't know for sure if the specific request went through.",
            "default": null,
            "type": [
              "string",
              "null"
            ],
            "format": "uuid"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Cancel",
        "type": "object",
        "required": [
          "id",
          "o",
          "tn",
          "ts",
          "xid"
        ],
        "properties": {
          "id": {
            "title": "order_id",
            "allOf": [
              {
                "$ref": "#/definitions/OrderId"
              }
            ]
          },
          "o": {
            "title": "status",
            "allOf": [
              {
                "$ref": "#/definitions/CancelStatus"
              }
            ]
          },
          "r": {
            "title": "reject_reason",
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "title": "recv_time_ns",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "title": "recv_time",
            "type": "integer",
            "format": "int64"
          },
          "xid": {
            "title": "cancel_id",
            "type": "string",
            "format": "uuid"
          }
        },
        "definitions": {
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/CancelAllOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelAllOrdersRequest",
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "execution_venue": {
            "type": [
              "string",
              "null"
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CancelAllOrdersResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/OpenOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OpenOrdersRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "order_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/OrderId"
            }
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "OpenOrdersResponse",
        "type": "object",
        "required": [
          "open_orders"
        ],
        "properties": {
          "open_orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Order": {
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Oms/PendingCancels",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PendingCancelsRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "cancel_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PendingCancelsResponse",
        "type": "object",
        "required": [
          "pending_cancels"
        ],
        "properties": {
          "pending_cancels": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Cancel"
            }
          }
        },
        "definitions": {
          "Cancel": {
            "type": "object",
            "required": [
              "id",
              "o",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/CancelStatus"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "title": "cancel_id",
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Folio",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountSummary",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummaryRequest",
        "type": "object",
        "required": [
          "account"
        ],
        "properties": {
          "account": {
            "$ref": "#/definitions/AccountIdOrName"
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummary",
        "type": "object",
        "required": [
          "account",
          "balances",
          "positions",
          "timestamp"
        ],
        "properties": {
          "account": {
            "type": "string",
            "format": "uuid"
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
            }
          },
          "cash_excess": {
            "description": "Cash available to withdraw.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "equity": {
            "description": "Total account equity; net liquidation value.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "position_margin": {
            "description": "Margin requirement based on current positions only.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "positions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountPosition"
              }
            }
          },
          "purchasing_power": {
            "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "realized_pnl": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "total_margin": {
            "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "unrealized_pnl": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          },
          "yesterday_equity": {
            "description": "Yesterday total account equity.",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cost_basis": {
                "description": "Cost basis of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "liquidation_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_time": {
                "description": "NB: the meaning of this field varies by reporting venue",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "unrealized_pnl": {
                "description": "Unrealized PNL of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountSummaries",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummariesRequest",
        "type": "object",
        "properties": {
          "accounts": {
            "description": "If trader and accounts are both None, return all accounts for the user",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/AccountIdOrName"
            }
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountSummariesResponse",
        "type": "object",
        "required": [
          "account_summaries"
        ],
        "properties": {
          "account_summaries": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountSummary"
            }
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cost_basis": {
                "description": "Cost basis of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "liquidation_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_time": {
                "description": "NB: the meaning of this field varies by reporting venue",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "unrealized_pnl": {
                "description": "Unrealized PNL of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "AccountSummary": {
            "type": "object",
            "required": [
              "account",
              "balances",
              "positions",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string",
                "format": "uuid"
              },
              "balances": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                }
              },
              "cash_excess": {
                "description": "Cash available to withdraw.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "equity": {
                "description": "Total account equity; net liquidation value.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "position_margin": {
                "description": "Margin requirement based on current positions only.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "positions": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPosition"
                  }
                }
              },
              "purchasing_power": {
                "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "realized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "total_margin": {
                "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "unrealized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "yesterday_equity": {
                "description": "Yesterday total account equity.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/AccountHistory",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountHistoryRequest",
        "type": "object",
        "required": [
          "account"
        ],
        "properties": {
          "account": {
            "$ref": "#/definitions/AccountIdOrName"
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AccountHistoryResponse",
        "type": "object",
        "required": [
          "history"
        ],
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AccountSummary"
            }
          }
        },
        "definitions": {
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cost_basis": {
                "description": "Cost basis of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "liquidation_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_time": {
                "description": "NB: the meaning of this field varies by reporting venue",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "unrealized_pnl": {
                "description": "Unrealized PNL of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "AccountSummary": {
            "type": "object",
            "required": [
              "account",
              "balances",
              "positions",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string",
                "format": "uuid"
              },
              "balances": {
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                }
              },
              "cash_excess": {
                "description": "Cash available to withdraw.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "equity": {
                "description": "Total account equity; net liquidation value.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "position_margin": {
                "description": "Margin requirement based on current positions only.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "positions": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPosition"
                  }
                }
              },
              "purchasing_power": {
                "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "realized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "total_margin": {
                "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "unrealized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "yesterday_equity": {
                "description": "Yesterday total account equity.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/HistoricalFills",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalFillsRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "limit": {
            "description": "Default maximum is 1000.",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalFillsResponse",
        "type": "object",
        "required": [
          "aberrant_fills",
          "fills"
        ],
        "properties": {
          "aberrant_fills": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AberrantFill"
            }
          },
          "fills": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Fill"
            }
          }
        },
        "definitions": {
          "AberrantFill": {
            "description": "Fills which we received but couldn't parse fully, return details best effort",
            "type": "object",
            "required": [
              "id",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "anyOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "title": "trade_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Fill": {
            "type": "object",
            "required": [
              "d",
              "id",
              "k",
              "p",
              "q",
              "s",
              "tn",
              "ts",
              "x"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": [
                  "string",
                  "null"
                ],
                "format": "uuid"
              },
              "agg": {
                "title": "is_taker",
                "default": null,
                "type": "integer",
                "format": "int"
              },
              "atn": {
                "title": "recv_time_ns",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "ats": {
                "title": "recv_time",
                "description": "When Architect received the fill, if realtime",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "f": {
                "title": "fee",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "fu": {
                "title": "fee_currency",
                "description": "Fee currency, if different from the price currency",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "title": "fill_id",
                "type": "string",
                "format": "uuid"
              },
              "k": {
                "title": "fill_kind",
                "allOf": [
                  {
                    "$ref": "#/definitions/FillKind"
                  }
                ]
              },
              "oid": {
                "title": "order_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "p": {
                "title": "price",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "tn": {
                "title": "trade_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "trade_time",
                "description": "When the cpty claims the trade happened",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "anyOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "x": {
                "title": "execution_venue",
                "type": "string"
              },
              "xid": {
                "title": "exchange_fill_id",
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "FillKind": {
            "type": "integer",
            "enum": [
              0,
              1,
              2
            ],
            "x-enumNames": [
              "Normal",
              "Reversal",
              "Correction"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Folio/HistoricalOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalOrdersRequest",
        "type": "object",
        "properties": {
          "account": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountIdOrName"
              },
              {
                "type": "null"
              }
            ]
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "limit": {
            "description": "Default maximum is 1000.",
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "order_ids": {
            "description": "if order_ids is not empty, the limit field is ignored",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/OrderId"
            }
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          },
          "venue": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HistoricalOrdersResponse",
        "type": "object",
        "required": [
          "orders"
        ],
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Order"
            }
          }
        },
        "definitions": {
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Order": {
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Cpty",
  "rpcs": [
    {
      "type": "duplex_stream",
      "route": "/json.architect.Cpty/Cpty",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptyRequest",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "Login|CptyLoginRequest",
            "type": "object",
            "required": [
              "account",
              "t",
              "trader"
            ],
            "properties": {
              "account": {
                "type": "string",
                "format": "uuid"
              },
              "t": {
                "type": "string",
                "enum": [
                  "login"
                ]
              },
              "trader": {
                "$ref": "#/definitions/UserId"
              }
            }
          },
          {
            "title": "Logout|CptyLogoutRequest",
            "type": "object",
            "required": [
              "t"
            ],
            "properties": {
              "t": {
                "type": "string",
                "enum": [
                  "logout"
                ]
              }
            }
          },
          {
            "title": "PlaceOrder|Order",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "place_order"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "CancelOrder",
            "type": "object",
            "required": [
              "cancel",
              "t"
            ],
            "properties": {
              "cancel": {
                "$ref": "#/definitions/Cancel"
              },
              "original_order": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Order"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "cancel_order"
                ]
              }
            }
          }
        ],
        "definitions": {
          "Cancel": {
            "type": "object",
            "required": [
              "id",
              "o",
              "tn",
              "ts",
              "xid"
            ],
            "properties": {
              "id": {
                "title": "order_id",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  }
                ]
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/CancelStatus"
                  }
                ]
              },
              "r": {
                "title": "reject_reason",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "type": "integer",
                "format": "int64"
              },
              "xid": {
                "title": "cancel_id",
                "type": "string",
                "format": "uuid"
              }
            }
          },
          "CancelStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127
            ],
            "x-enumNames": [
              "Pending",
              "Acked",
              "Rejected",
              "Out"
            ]
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "Order": {
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptyResponse",
        "description": "<!-- py: tag=t -->",
        "oneOf": [
          {
            "title": "Symbology",
            "type": "object",
            "required": [
              "execution_info",
              "t"
            ],
            "properties": {
              "execution_info": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/definitions/ExecutionInfo"
                  }
                }
              },
              "t": {
                "type": "string",
                "enum": [
                  "xs"
                ]
              }
            }
          },
          {
            "title": "ReconcileOrder|Order",
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "t",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "ro"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          {
            "title": "ReconcileOpenOrders",
            "type": "object",
            "required": [
              "orders",
              "t"
            ],
            "properties": {
              "orders": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Order"
                }
              },
              "snapshot_for_account": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountIdOrName"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "oo"
                ]
              }
            }
          },
          {
            "title": "UpdateAccountSummary",
            "type": "object",
            "required": [
              "account",
              "is_snapshot",
              "t",
              "timestamp",
              "timestamp_ns"
            ],
            "properties": {
              "account": {
                "$ref": "#/definitions/AccountIdOrName"
              },
              "balances": {
                "default": null,
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": "string",
                  "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                }
              },
              "is_snapshot": {
                "type": "boolean"
              },
              "positions": {
                "default": null,
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPosition"
                  }
                }
              },
              "statistics": {
                "default": null,
                "anyOf": [
                  {
                    "$ref": "#/definitions/AccountStatistics"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "as"
                ]
              },
              "timestamp": {
                "type": "integer",
                "format": "int64"
              },
              "timestamp_ns": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              }
            }
          }
        ],
        "definitions": {
          "AccountIdOrName": {
            "type": "string"
          },
          "AccountPosition": {
            "type": "object",
            "required": [
              "quantity"
            ],
            "properties": {
              "break_even_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cost_basis": {
                "description": "Cost basis of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "liquidation_price": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_time": {
                "description": "NB: the meaning of this field varies by reporting venue",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "unrealized_pnl": {
                "description": "Unrealized PNL of the position, if known.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "AccountStatistics": {
            "type": "object",
            "properties": {
              "cash_excess": {
                "description": "Cash available to withdraw.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "equity": {
                "description": "Total account equity; net liquidation value.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "position_margin": {
                "description": "Margin requirement based on current positions only.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "purchasing_power": {
                "description": "Total purchasing power; post-multiplied. (e.g. for cash margin account could be 2x available cash)",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "realized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "total_margin": {
                "description": "Margin requirement calculated for worst-case based on open positions and working orders.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "unrealized_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "yesterday_equity": {
                "description": "Yesterday total account equity.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "exchange_symbol": {
                "description": "If the execution venue has stable symbology, this may be populated",
                "type": [
                  "string",
                  "null"
                ]
              },
              "execution_venue": {
                "type": "string"
              },
              "initial_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "maintenance_margin": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "title": "Base",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "title": "Quote",
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "Order": {
            "description": "<!-- py: unflatten=k/order_type/OrderType, tag=k -->",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "k"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "MARKET"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "po"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "po": {
                    "title": "post_only",
                    "type": "boolean"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "STOP_LOSS_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "k",
                  "p",
                  "tp"
                ],
                "properties": {
                  "k": {
                    "type": "string",
                    "enum": [
                      "TAKE_PROFIT_LIMIT"
                    ]
                  },
                  "p": {
                    "title": "limit_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  },
                  "tp": {
                    "title": "trigger_price",
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                }
              }
            ],
            "required": [
              "a",
              "d",
              "id",
              "o",
              "q",
              "s",
              "src",
              "tif",
              "tn",
              "ts",
              "u",
              "ve",
              "xq"
            ],
            "properties": {
              "a": {
                "title": "account",
                "type": "string",
                "format": "uuid"
              },
              "d": {
                "title": "dir",
                "allOf": [
                  {
                    "$ref": "#/definitions/Dir"
                  }
                ]
              },
              "eid": {
                "title": "exchange_order_id",
                "type": [
                  "string",
                  "null"
                ]
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "o": {
                "title": "status",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderStatus"
                  }
                ]
              },
              "pid": {
                "title": "parent_id",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "q": {
                "title": "quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "r": {
                "title": "reject_reason",
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderRejectReason"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "rm": {
                "title": "reject_message",
                "type": [
                  "string",
                  "null"
                ]
              },
              "s": {
                "title": "symbol",
                "type": "string"
              },
              "src": {
                "title": "source",
                "allOf": [
                  {
                    "$ref": "#/definitions/OrderSource"
                  }
                ]
              },
              "ss": {
                "title": "is_short_sale",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "tif": {
                "title": "time_in_force",
                "allOf": [
                  {
                    "$ref": "#/definitions/TimeInForce"
                  }
                ]
              },
              "tn": {
                "title": "recv_time_ns",
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "title": "recv_time",
                "description": "Timestamp that the Architect OMS first received the order.\n\nFor reconciled orders, this could be very far in the future relative to the exchange order timestamp.",
                "type": "integer",
                "format": "int64"
              },
              "u": {
                "title": "trader",
                "allOf": [
                  {
                    "$ref": "#/definitions/UserId"
                  }
                ]
              },
              "ve": {
                "title": "execution_venue",
                "type": "string"
              },
              "xp": {
                "title": "average_fill_price",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "xq": {
                "title": "filled_quantity",
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "OrderRejectReason": {
            "type": "string",
            "enum": [
              "DuplicateOrderId",
              "NotAuthorized",
              "NoExecutionVenue",
              "NoAccount",
              "NoCpty",
              "UnsupportedOrderType",
              "UnsupportedExecutionVenue",
              "InsufficientCash",
              "InsufficientMargin",
              "NotEasyToBorrow",
              "Unknown"
            ]
          },
          "OrderSource": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              255
            ],
            "x-enumNames": [
              "API",
              "GUI",
              "Algo",
              "Reconciled",
              "CLI",
              "Telegram",
              "Other"
            ]
          },
          "OrderStatus": {
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              127,
              128,
              129,
              130,
              254,
              255
            ],
            "x-enumNames": [
              "Pending",
              "Open",
              "Rejected",
              "Out",
              "Canceling",
              "Canceled",
              "ReconciledOut",
              "Stale",
              "Unknown"
            ]
          },
          "TickSize": {
            "oneOf": [
              {
                "title": "Simple|Decimal",
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "type": "string",
                    "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "Varying",
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            },
                            {
                              "type": "string",
                              "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeInForce": {
            "oneOf": [
              {
                "title": "GoodTilCancel",
                "type": "string",
                "enum": [
                  "GTC"
                ]
              },
              {
                "title": "GoodTilDate",
                "type": "object",
                "required": [
                  "GTD"
                ],
                "properties": {
                  "GTD": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "additionalProperties": false
              },
              {
                "title": "GoodTilDay",
                "description": "Day order--the specific time which this expires will be dependent on the venue",
                "type": "string",
                "enum": [
                  "DAY"
                ]
              },
              {
                "title": "ImmediateOrCancel",
                "type": "string",
                "enum": [
                  "IOC"
                ]
              },
              {
                "title": "FillOrKill",
                "type": "string",
                "enum": [
                  "FOK"
                ]
              },
              {
                "title": "AtTheOpen",
                "type": "string",
                "enum": [
                  "ATO"
                ]
              },
              {
                "title": "AtTheClose",
                "type": "string",
                "enum": [
                  "ATC"
                ]
              }
            ]
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Cpty/CptyStatus",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptyStatusRequest",
        "type": "object",
        "required": [
          "kind"
        ],
        "properties": {
          "instance": {
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptyStatus",
        "type": "object",
        "required": [
          "connected",
          "connections",
          "kind",
          "stale"
        ],
        "properties": {
          "connected": {
            "type": "boolean"
          },
          "connections": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ConnectionStatus"
            }
          },
          "instance": {
            "type": [
              "string",
              "null"
            ]
          },
          "kind": {
            "type": "string"
          },
          "logged_in": {
            "description": "Not applicable to cpty if None",
            "type": [
              "boolean",
              "null"
            ]
          },
          "stale": {
            "type": "boolean"
          }
        },
        "definitions": {
          "ConnectionStatus": {
            "type": "object",
            "required": [
              "connected",
              "last_heartbeat",
              "last_heartbeat_stale_threshold"
            ],
            "properties": {
              "connected": {
                "type": "boolean"
              },
              "last_heartbeat": {
                "description": "UNIX epoch time or -1 for never",
                "type": "integer",
                "format": "int64"
              },
              "last_heartbeat_stale_threshold": {
                "description": "Stale threshold in seconds, or -1 for never stale",
                "type": "integer",
                "format": "int64"
              },
              "logged_in": {
                "description": "Not applicable to connection if None",
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Cpty/Cptys",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptysRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CptysResponse",
        "type": "object",
        "required": [
          "cptys"
        ],
        "properties": {
          "cptys": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CptyStatus"
            }
          }
        },
        "definitions": {
          "ConnectionStatus": {
            "type": "object",
            "required": [
              "connected",
              "last_heartbeat",
              "last_heartbeat_stale_threshold"
            ],
            "properties": {
              "connected": {
                "type": "boolean"
              },
              "last_heartbeat": {
                "description": "UNIX epoch time or -1 for never",
                "type": "integer",
                "format": "int64"
              },
              "last_heartbeat_stale_threshold": {
                "description": "Stale threshold in seconds, or -1 for never stale",
                "type": "integer",
                "format": "int64"
              },
              "logged_in": {
                "description": "Not applicable to connection if None",
                "type": [
                  "boolean",
                  "null"
                ]
              }
            }
          },
          "CptyStatus": {
            "type": "object",
            "required": [
              "connected",
              "connections",
              "kind",
              "stale"
            ],
            "properties": {
              "connected": {
                "type": "boolean"
              },
              "connections": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/ConnectionStatus"
                }
              },
              "instance": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "type": "string"
              },
              "logged_in": {
                "description": "Not applicable to cpty if None",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "stale": {
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Algo",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Algo/CreateAlgoOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "CreateAlgoOrderRequest",
        "type": "object",
        "required": [
          "algo",
          "params"
        ],
        "properties": {
          "algo": {
            "type": "string"
          },
          "id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "params": true,
          "parent_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrder",
        "type": "object",
        "required": [
          "algo",
          "create_time",
          "id",
          "num_errors",
          "num_open_orders",
          "num_rejects",
          "num_sent_orders",
          "params",
          "status",
          "status_details",
          "trader"
        ],
        "properties": {
          "algo": {
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "display_symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "finish_success": {
            "description": "If the algo order is stopped, whether the stop was successful.",
            "type": [
              "boolean",
              "null"
            ]
          },
          "finish_time": {
            "description": "If the algo order is stopped, the time at which it was stopped.",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "id": {
            "$ref": "#/definitions/OrderId"
          },
          "num_errors": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_open_orders": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_rejects": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_sent_orders": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "params": true,
          "parent_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "reject_or_error_reason": {
            "description": "If algo order status is rejected, contains the reject reason; for algo orders that finished unsuccessfully, contains the error reason.",
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "$ref": "#/definitions/AlgoOrderStatus"
          },
          "status_details": true,
          "trader": {
            "$ref": "#/definitions/UserId"
          },
          "working_progress": {
            "description": "Progress of the algo, 0.0 to 1.0, if computable",
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          }
        },
        "definitions": {
          "AlgoOrderStatus": {
            "type": "integer",
            "enum": [
              1,
              2,
              63,
              127
            ],
            "x-enumNames": [
              "Working",
              "Rejected",
              "Paused",
              "Stopped"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/StartAlgo",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StartAlgoRequest",
        "type": "object",
        "required": [
          "algo_order_id"
        ],
        "properties": {
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StartAlgoResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/PauseAlgo",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PauseAlgoRequest",
        "type": "object",
        "required": [
          "algo_order_id"
        ],
        "properties": {
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PauseAlgoResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/StopAlgo",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StopAlgoRequest",
        "type": "object",
        "required": [
          "algo_order_id"
        ],
        "properties": {
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StopAlgoResponse",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/AlgoOrder",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrderRequest",
        "description": "Get generic algo run status",
        "type": "object",
        "required": [
          "algo_order_id"
        ],
        "properties": {
          "algo_order_id": {
            "$ref": "#/definitions/OrderId"
          }
        },
        "definitions": {
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrder",
        "type": "object",
        "required": [
          "algo",
          "create_time",
          "id",
          "num_errors",
          "num_open_orders",
          "num_rejects",
          "num_sent_orders",
          "params",
          "status",
          "status_details",
          "trader"
        ],
        "properties": {
          "algo": {
            "type": "string"
          },
          "create_time": {
            "type": "string",
            "format": "date-time"
          },
          "display_symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "finish_success": {
            "description": "If the algo order is stopped, whether the stop was successful.",
            "type": [
              "boolean",
              "null"
            ]
          },
          "finish_time": {
            "description": "If the algo order is stopped, the time at which it was stopped.",
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "id": {
            "$ref": "#/definitions/OrderId"
          },
          "num_errors": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_open_orders": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_rejects": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "num_sent_orders": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "params": true,
          "parent_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "reject_or_error_reason": {
            "description": "If algo order status is rejected, contains the reject reason; for algo orders that finished unsuccessfully, contains the error reason.",
            "type": [
              "string",
              "null"
            ]
          },
          "status": {
            "$ref": "#/definitions/AlgoOrderStatus"
          },
          "status_details": true,
          "trader": {
            "$ref": "#/definitions/UserId"
          },
          "working_progress": {
            "description": "Progress of the algo, 0.0 to 1.0, if computable",
            "type": [
              "number",
              "null"
            ],
            "format": "double"
          }
        },
        "definitions": {
          "AlgoOrderStatus": {
            "type": "integer",
            "enum": [
              1,
              2,
              63,
              127
            ],
            "x-enumNames": [
              "Working",
              "Rejected",
              "Paused",
              "Stopped"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Algo/AlgoOrders",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrdersRequest",
        "description": "Find all algo orders matching the given criteria.\n\nIf limit is not specified, it will default to 100.",
        "type": "object",
        "properties": {
          "algo": {
            "type": [
              "string",
              "null"
            ]
          },
          "display_symbol": {
            "type": [
              "string",
              "null"
            ]
          },
          "from_inclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "limit": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0.0
          },
          "parent_order_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/OrderId"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/AlgoOrderStatus"
            }
          },
          "to_exclusive": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "trader": {
            "anyOf": [
              {
                "$ref": "#/definitions/TraderIdOrEmail"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AlgoOrderStatus": {
            "type": "integer",
            "enum": [
              1,
              2,
              63,
              127
            ],
            "x-enumNames": [
              "Working",
              "Rejected",
              "Paused",
              "Stopped"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "TraderIdOrEmail": {
            "type": "string"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "AlgoOrdersResponse",
        "type": "object",
        "required": [
          "algo_orders"
        ],
        "properties": {
          "algo_orders": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AlgoOrder"
            }
          }
        },
        "definitions": {
          "AlgoOrder": {
            "type": "object",
            "required": [
              "algo",
              "create_time",
              "id",
              "num_errors",
              "num_open_orders",
              "num_rejects",
              "num_sent_orders",
              "params",
              "status",
              "status_details",
              "trader"
            ],
            "properties": {
              "algo": {
                "type": "string"
              },
              "create_time": {
                "type": "string",
                "format": "date-time"
              },
              "display_symbols": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                }
              },
              "finish_success": {
                "description": "If the algo order is stopped, whether the stop was successful.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "finish_time": {
                "description": "If the algo order is stopped, the time at which it was stopped.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "id": {
                "$ref": "#/definitions/OrderId"
              },
              "num_errors": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "num_open_orders": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "num_rejects": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "num_sent_orders": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "params": true,
              "parent_id": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/OrderId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "reject_or_error_reason": {
                "description": "If algo order status is rejected, contains the reject reason; for algo orders that finished unsuccessfully, contains the error reason.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "$ref": "#/definitions/AlgoOrderStatus"
              },
              "status_details": true,
              "trader": {
                "$ref": "#/definitions/UserId"
              },
              "working_progress": {
                "description": "Progress of the algo, 0.0 to 1.0, if computable",
                "type": [
                  "number",
                  "null"
                ],
                "format": "double"
              }
            }
          },
          "AlgoOrderStatus": {
            "type": "integer",
            "enum": [
              1,
              2,
              63,
              127
            ],
            "x-enumNames": [
              "Working",
              "Rejected",
              "Paused",
              "Stopped"
            ]
          },
          "OrderId": {
            "description": "System-unique, persistent order identifiers <!-- py: type=string -->",
            "type": "object",
            "required": [
              "seqid",
              "seqno"
            ],
            "properties": {
              "seqid": {
                "type": "string",
                "format": "uuid"
              },
              "seqno": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            }
          },
          "UserId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  ]
},

{
  "$schema": "jsonschema",
  "name": "Boss",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Boss/Statements",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StatementsRequest",
        "type": "object",
        "required": [
          "account_id"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StatementsResponse",
        "type": "object",
        "required": [
          "statements"
        ],
        "properties": {
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Statement"
            }
          }
        },
        "definitions": {
          "Statement": {
            "type": "object",
            "required": [
              "account",
              "clearing_firm",
              "filename",
              "statement_date",
              "statement_type",
              "statement_uuid"
            ],
            "properties": {
              "account": {
                "type": "string"
              },
              "clearing_firm": {
                "type": "string"
              },
              "filename": {
                "type": "string"
              },
              "statement_date": {
                "type": "string",
                "format": "date"
              },
              "statement_type": {
                "type": "string"
              },
              "statement_uuid": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Boss/StatementUrl",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StatementUrlRequest",
        "type": "object",
        "required": [
          "statement_uuid"
        ],
        "properties": {
          "statement_uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "StatementUrlResponse",
        "type": "object",
        "required": [
          "statement_url"
        ],
        "properties": {
          "statement_url": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Boss/RqdAccountStatistics",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "RqdAccountStatisticsRequest",
        "type": "object",
        "required": [
          "account_id"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "RqdAccountStatisticsResponse",
        "type": "object",
        "required": [
          "rqd_account_statistics"
        ],
        "properties": {
          "rqd_account_statistics": {
            "$ref": "#/definitions/RqdAccountStatistics"
          }
        },
        "definitions": {
          "RqdAccountStatistics": {
            "type": "object",
            "required": [
              "account_number"
            ],
            "properties": {
              "account_number": {
                "type": "string"
              },
              "account_type": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "as_of_date": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "available_cash_balance": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cash_available_for_withdrawal": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "cumulative_day_trade_pnl": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_buying_power": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_buying_power_high_water_mark": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_buying_power_maintenance_margin_multiplier": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_house_minimum_equity_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "day_trading_minimum_equity_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "excess_sma_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "house_initial_margin_requirement_adjustment_factor": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "house_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "house_margin_requirement": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "house_margin_requirement_adjustment_factor": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "is_day_trader": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "maintenance_margin_requirement": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "marginable_equity": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "market_value_adjustment_factor": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "number_open_day_trading_margin_calls": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "option_only_maintenance_margin_requirement": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "option_trade_date_short_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "overall_current_sma_balance": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "overnight_buying_power": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "reg_t_initial_margin_requirement": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "reg_t_maintenance_margin_requirement_adjustment_factor": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reg_t_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "settlement_date_cash_balance": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "settlement_date_long_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "settlement_date_option_long_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "settlement_date_option_short_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "settlement_date_short_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "start_of_day_day_trading_buying_power": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "start_of_day_day_trading_buying_power_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "start_of_day_house_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "start_of_day_maintenance_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "start_of_day_reg_t_margin_call_amount": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "strategy_based_relief_adjustment_factor": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "total_equity": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_date_cash_balance": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_date_option_long_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_date_total_long_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "trade_date_total_short_market_value": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "usable_sma_balance": {
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Boss/Deposits",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DepositsRequest",
        "type": "object",
        "required": [
          "account_id"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "DepositsResponse",
        "type": "object",
        "required": [
          "deposits"
        ],
        "properties": {
          "deposits": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Deposit"
            }
          }
        },
        "definitions": {
          "Deposit": {
            "type": "object",
            "required": [
              "account",
              "amount",
              "description",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string"
              },
              "amount": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "description": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Boss/Withdrawals",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "WithdrawalsRequest",
        "type": "object",
        "required": [
          "account_id"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "WithdrawalsResponse",
        "type": "object",
        "required": [
          "withdrawals"
        ],
        "properties": {
          "withdrawals": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Withdrawal"
            }
          }
        },
        "definitions": {
          "Withdrawal": {
            "type": "object",
            "required": [
              "account",
              "amount",
              "description",
              "timestamp"
            ],
            "properties": {
              "account": {
                "type": "string"
              },
              "amount": {
                "type": "string",
                "pattern": "^-?[0-9]+(\\.[0-9]+)?$"
              },
              "description": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    }
  ]
}
]