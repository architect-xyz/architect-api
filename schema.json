health
{
  "$schema": "jsonschema",
  "name": "Health",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Health/Check",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckRequest",
        "type": "object",
        "properties": {
          "service": {
            "description": "The service to check status for; if not provided, status of the queried server overall is returned.\n\nGenerally, this will only be set when querying the API gateway.  It's not recommended to rely on internal subservice names being stable.",
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "HealthCheckResponse",
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "$ref": "#/definitions/HealthStatus"
          }
        },
        "definitions": {
          "HealthStatus": {
            "type": "string",
            "enum": [
              "UNKNOWN",
              "SERVING",
              "NOT_SERVING",
              "SERVICE_UNKNOWN"
            ]
          }
        }
      }
    }
  ]
}

symbology
{
  "$schema": "jsonschema",
  "name": "Symbology",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Symbology/SymbologySnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologySnapshotRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologySnapshot",
        "type": "object",
        "required": [
          "epoch",
          "markets",
          "products",
          "routes",
          "seqno",
          "venues"
        ],
        "properties": {
          "epoch": {
            "type": "string",
            "format": "date-time"
          },
          "markets": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Market"
            }
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Product"
            }
          },
          "routes": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Route"
            }
          },
          "seqno": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "venues": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Venue"
            }
          }
        },
        "definitions": {
          "Amount_for_Decimal_and_MinOrderQuantityUnit": {
            "type": "object",
            "required": [
              "amount",
              "unit"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Decimal"
              },
              "unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              }
            }
          },
          "AsStr": {
            "type": "string"
          },
          "B2C2MarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "BinanceMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "min_order_quantity",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Amount_for_Decimal_and_MinOrderQuantityUnit"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "BybitMarketInfo": {
            "type": "object",
            "required": [
              "product_type",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "product_type": {
                "$ref": "#/definitions/ProductType"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CboeDigitalMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CoinbaseMarketInfo": {
            "type": "object",
            "required": [
              "auction_mode",
              "base_increment",
              "cancel_only",
              "fx_stablecoin",
              "limit_only",
              "min_market_funds",
              "post_only",
              "quote_increment",
              "trading_disabled"
            ],
            "properties": {
              "auction_mode": {
                "type": "boolean"
              },
              "base_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "cancel_only": {
                "type": "boolean"
              },
              "fx_stablecoin": {
                "type": "boolean"
              },
              "is_delisted": {
                "default": false,
                "type": "boolean"
              },
              "limit_only": {
                "type": "boolean"
              },
              "min_market_funds": {
                "$ref": "#/definitions/Decimal"
              },
              "post_only": {
                "type": "boolean"
              },
              "quote_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "status_message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "trading_disabled": {
                "type": "boolean"
              }
            }
          },
          "CoinbasePrimeMarketInfo": {
            "type": "object",
            "required": [
              "base_increment",
              "base_max_size",
              "base_min_size",
              "quote_increment",
              "quote_max_size",
              "quote_min_size"
            ],
            "properties": {
              "base_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "base_max_size": {
                "$ref": "#/definitions/Decimal"
              },
              "base_min_size": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_max_size": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_min_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CqgMarketInfo": {
            "type": "object",
            "required": [
              "correct_price_scale",
              "deleted",
              "description",
              "exchange_group_symbol",
              "exchange_symbol",
              "last_trading_date",
              "market_data_delay_ms",
              "tick_size",
              "tick_value",
              "trade_size_increment"
            ],
            "properties": {
              "cfi_code": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "correct_price_scale": {
                "$ref": "#/definitions/Decimal"
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "deleted": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "exchange_group_symbol": {
                "type": "string"
              },
              "exchange_symbol": {
                "type": "string"
              },
              "first_notice_date": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "initial_margin": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "last_trading_date": {
                "type": "string",
                "format": "date-time"
              },
              "maintenance_margin": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "market_data_delay_ms": {
                "type": "integer",
                "format": "int64"
              },
              "symbol_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_value": {
                "$ref": "#/definitions/Decimal"
              },
              "trade_size_increment": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CumberlandMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DYDXMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DatabentoMarketInfo": {
            "type": "object",
            "required": [
              "expiration",
              "is_delisted",
              "raw_symbol",
              "root_symbol",
              "step_size",
              "tick_size",
              "underlying",
              "underlying_root"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "raw_symbol": {
                "type": "string"
              },
              "root_symbol": {
                "type": "string"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "underlying": {
                "type": "string"
              },
              "underlying_root": {
                "type": "string"
              }
            }
          },
          "Decimal": {
            "type": "string"
          },
          "DeltixMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DeribitMarketInfo": {
            "type": "object",
            "required": [
              "is_active",
              "min_trade_amount",
              "tick_size"
            ],
            "properties": {
              "is_active": {
                "type": "boolean"
              },
              "min_trade_amount": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "ERC20TokenInfo": {
            "type": "object",
            "required": [
              "address",
              "decimals"
            ],
            "properties": {
              "address": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                }
              },
              "decimals": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              }
            }
          },
          "EventContracts": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Single"
                ],
                "properties": {
                  "Single": {
                    "type": "object",
                    "required": [
                      "yes"
                    ],
                    "properties": {
                      "yes": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "yes_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "Dual"
                ],
                "properties": {
                  "Dual": {
                    "type": "object",
                    "required": [
                      "no",
                      "yes"
                    ],
                    "properties": {
                      "no": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "no_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "yes": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "yes_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExchangeMarketKind": {
            "type": "object",
            "required": [
              "base",
              "quote"
            ],
            "properties": {
              "base": {
                "$ref": "#/definitions/ProductId"
              },
              "quote": {
                "$ref": "#/definitions/ProductId"
              }
            }
          },
          "ExternalMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "FalconXMarketInfo": {
            "type": "object"
          },
          "GalaxyMarketInfo": {
            "type": "object",
            "required": [
              "tick_size"
            ],
            "properties": {
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "InstrumentType": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Inverse"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Linear"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Quanto"
                    ]
                  }
                }
              }
            ]
          },
          "KrakenMarketInfo": {
            "type": "object",
            "required": [
              "aclass_base",
              "aclass_quote",
              "altname",
              "base",
              "cost_decimals",
              "costmin",
              "fee_volume_currency",
              "lot_decimals",
              "lot_multiplier",
              "margin_call",
              "margin_stop",
              "ordermin",
              "pair_decimals",
              "quote",
              "status",
              "tick_size",
              "wsname"
            ],
            "properties": {
              "aclass_base": {
                "type": "string"
              },
              "aclass_quote": {
                "type": "string"
              },
              "altname": {
                "type": "string"
              },
              "base": {
                "type": "string"
              },
              "cost_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "costmin": {
                "$ref": "#/definitions/Decimal"
              },
              "fee_volume_currency": {
                "type": "string"
              },
              "long_position_limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "lot_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "lot_multiplier": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "margin_call": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "margin_stop": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "ordermin": {
                "$ref": "#/definitions/Decimal"
              },
              "pair_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "quote": {
                "type": "string"
              },
              "short_position_limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "status": {
                "$ref": "#/definitions/Status"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "wsname": {
                "type": "string"
              }
            }
          },
          "Market": {
            "type": "object",
            "required": [
              "exchange_symbol",
              "extra_info",
              "id",
              "kind",
              "name",
              "route",
              "venue"
            ],
            "properties": {
              "exchange_symbol": {
                "$ref": "#/definitions/Str"
              },
              "extra_info": {
                "$ref": "#/definitions/MarketInfo"
              },
              "id": {
                "$ref": "#/definitions/MarketId"
              },
              "kind": {
                "$ref": "#/definitions/MarketKind"
              },
              "name": {
                "$ref": "#/definitions/Str"
              },
              "route": {
                "$ref": "#/definitions/RouteId"
              },
              "venue": {
                "$ref": "#/definitions/VenueId"
              }
            }
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          },
          "MarketInfo": {
            "description": "Cpty-specific info about a market",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Test"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/TestMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "External"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/ExternalMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "B2C2"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/B2C2MarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Binance"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/BinanceMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Bybit"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/BybitMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CboeDigital"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CboeDigitalMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Coinbase"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CoinbaseMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CoinbasePrime"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CoinbasePrimeMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Cqg"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CqgMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Cumberland"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CumberlandMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "DYDX"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DYDXMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Databento"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DatabentoMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Deltix"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DeltixMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Deribit"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DeribitMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "FalconX"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/FalconXMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Galaxy"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/GalaxyMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Kraken"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/KrakenMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Okx"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/OkxMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Wintermute"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/WintermuteMarketInfo"
                  }
                }
              }
            ]
          },
          "MarketKind": {
            "oneOf": [
              {
                "description": "A regular exchange trading pair, e.g. Coinbase BTC/USD",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Exchange"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/ExchangeMarketKind"
                  }
                }
              },
              {
                "description": "An unordered pool of products, e.g. a Uniswap pool or Curve 3-pool The type is still ordered for canonical naming purpose",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Pool"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/PoolMarketKind"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OkxMarketInfo": {
            "type": "object",
            "required": [
              "min_sz",
              "tick_sz"
            ],
            "properties": {
              "min_sz": {
                "$ref": "#/definitions/Decimal"
              },
              "state": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tick_sz": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "PoolMarketKind": {
            "type": "object",
            "required": [
              "products"
            ],
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ProductId"
                }
              }
            }
          },
          "Product": {
            "type": "object",
            "required": [
              "id",
              "kind",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/ProductId"
              },
              "kind": {
                "$ref": "#/definitions/ProductKind"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "ProductId": {
            "type": "string",
            "format": "uuid"
          },
          "ProductKind": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Coin"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "token_info"
                    ],
                    "properties": {
                      "token_info": {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/definitions/TokenInfo"
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "description": "The one guarantee for [underlying] if set is that it can be used to uniquely identify strips of related futures",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "opp_side_leg": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "same_side_leg": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "description": "The one guarantee for [underlying] if set is that it can be used to uniquely identify strips of related options",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "description": "Event contracts are products akin to binary options which settle to an outcome of a future event.\n\nSpecific tradable event contracts are represented by the EventContract variant, e.g. FED-2024-SEP-CUT-25-YES and/or FED-2024-SEP-CUT-25-NO. for the YES and NO contracts of the \"Fed to cut 25 bps\" outcome. EventContract's are grouped into EventOutcome's, which pair the YES and NO contracts of an outcome together.  There are venues like KALSHI which have only one YES contract per outcome (the NO contract is implicit via short-selling the YES contract).\n\nEventOutcomes are grouped into Events, e.g. FED-2024-SEP is an Event with the following mutually exclusive outcomes:\n\n- FED-2024-SEP-HIKE - FED-2024-SEP-CUT-0 - FED-2024-SEP-CUT-25 - FED-2024-SEP-CUT-ABOVE-25\n\nEvents _may_ be grouped into EventSeries, e.g. all FED events belong to the same series of events.\n\nThe grouping of EventContracts into outcomes, events, and event series are indicative and mostly for display purposes, and don't necessarily imply anything about the settlement of individual event contracts.",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventSeries"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Event"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "outcomes"
                    ],
                    "properties": {
                      "display_category": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "mutually_exclusive": {
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "outcomes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/ProductId"
                        }
                      },
                      "series": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventOutcome"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "contracts"
                    ],
                    "properties": {
                      "contracts": {
                        "$ref": "#/definitions/EventContracts"
                      },
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "display_order": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "uint32",
                        "minimum": 0.0
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "ProductType": {
            "type": "string",
            "enum": [
              "spot",
              "linear",
              "inverse",
              "option"
            ]
          },
          "Route": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/RouteId"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "RouteId": {
            "type": "string",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "enum": [
              "Online",
              "CancelOnly",
              "PostOnly",
              "LimitOnly",
              "ReduceOnly"
            ]
          },
          "Str": {
            "description": "This is either an immediate containing the string data, if the length is less than 8, or a pointer into static memory that holds the actual str slice if the data length is greater than 7.\n\nEither way it is 1 word on the stack. In the case of an immediate the length as well as all the bytes are stored in that word, and there is no allocation on the heap. Otherwise the length, as well as the actual bytes of the string are stored on the heap in a compact allocation along with other strings of this type.\n\nThe maximum length of strings of this type is 255 characters. try_from will fail if a larger string is specified.\n\nIn either case Deref should be quite cheap, there is no locking to deref.\n\nIn the case of immediates there is never any locking. Otherwise, a global lock must be taken to hashcons the string and, if it isn't already present, insert it in the packed allocation.",
            "allOf": [
              {
                "$ref": "#/definitions/AsStr"
              }
            ]
          },
          "TestMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "TokenInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "ERC20"
                ],
                "properties": {
                  "ERC20": {
                    "$ref": "#/definitions/ERC20TokenInfo"
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "Venue": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/VenueId"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "VenueId": {
            "type": "string",
            "format": "uuid"
          },
          "WintermuteMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Symbology/SubscribeSymbologyUpdates",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeSymbologyUpdatesRequest",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyUpdate",
        "type": "object",
        "required": [
          "epoch",
          "seqno"
        ],
        "properties": {
          "epoch": {
            "type": "string",
            "format": "date-time"
          },
          "markets": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Market"
            }
          },
          "products": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Product"
            }
          },
          "routes": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Route"
            }
          },
          "seqno": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "venues": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/Venue"
            }
          }
        },
        "definitions": {
          "Amount_for_Decimal_and_MinOrderQuantityUnit": {
            "type": "object",
            "required": [
              "amount",
              "unit"
            ],
            "properties": {
              "amount": {
                "$ref": "#/definitions/Decimal"
              },
              "unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              }
            }
          },
          "AsStr": {
            "type": "string"
          },
          "B2C2MarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "BinanceMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "min_order_quantity",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Amount_for_Decimal_and_MinOrderQuantityUnit"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "BybitMarketInfo": {
            "type": "object",
            "required": [
              "product_type",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "product_type": {
                "$ref": "#/definitions/ProductType"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CboeDigitalMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CoinbaseMarketInfo": {
            "type": "object",
            "required": [
              "auction_mode",
              "base_increment",
              "cancel_only",
              "fx_stablecoin",
              "limit_only",
              "min_market_funds",
              "post_only",
              "quote_increment",
              "trading_disabled"
            ],
            "properties": {
              "auction_mode": {
                "type": "boolean"
              },
              "base_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "cancel_only": {
                "type": "boolean"
              },
              "fx_stablecoin": {
                "type": "boolean"
              },
              "is_delisted": {
                "default": false,
                "type": "boolean"
              },
              "limit_only": {
                "type": "boolean"
              },
              "min_market_funds": {
                "$ref": "#/definitions/Decimal"
              },
              "post_only": {
                "type": "boolean"
              },
              "quote_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "status_message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "trading_disabled": {
                "type": "boolean"
              }
            }
          },
          "CoinbasePrimeMarketInfo": {
            "type": "object",
            "required": [
              "base_increment",
              "base_max_size",
              "base_min_size",
              "quote_increment",
              "quote_max_size",
              "quote_min_size"
            ],
            "properties": {
              "base_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "base_max_size": {
                "$ref": "#/definitions/Decimal"
              },
              "base_min_size": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_increment": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_max_size": {
                "$ref": "#/definitions/Decimal"
              },
              "quote_min_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CqgMarketInfo": {
            "type": "object",
            "required": [
              "correct_price_scale",
              "deleted",
              "description",
              "exchange_group_symbol",
              "exchange_symbol",
              "last_trading_date",
              "market_data_delay_ms",
              "tick_size",
              "tick_value",
              "trade_size_increment"
            ],
            "properties": {
              "cfi_code": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "correct_price_scale": {
                "$ref": "#/definitions/Decimal"
              },
              "cqg_contract_symbol": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "deleted": {
                "type": "boolean"
              },
              "description": {
                "type": "string"
              },
              "exchange_group_symbol": {
                "type": "string"
              },
              "exchange_symbol": {
                "type": "string"
              },
              "first_notice_date": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "initial_margin": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "last_trading_date": {
                "type": "string",
                "format": "date-time"
              },
              "maintenance_margin": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "market_data_delay_ms": {
                "type": "integer",
                "format": "int64"
              },
              "symbol_id": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_value": {
                "$ref": "#/definitions/Decimal"
              },
              "trade_size_increment": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "CumberlandMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DYDXMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DatabentoMarketInfo": {
            "type": "object",
            "required": [
              "expiration",
              "is_delisted",
              "raw_symbol",
              "root_symbol",
              "step_size",
              "tick_size",
              "underlying",
              "underlying_root"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "raw_symbol": {
                "type": "string"
              },
              "root_symbol": {
                "type": "string"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "underlying": {
                "type": "string"
              },
              "underlying_root": {
                "type": "string"
              }
            }
          },
          "Decimal": {
            "type": "string"
          },
          "DeltixMarketInfo": {
            "type": "object",
            "required": [
              "step_size",
              "tick_size"
            ],
            "properties": {
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "DeribitMarketInfo": {
            "type": "object",
            "required": [
              "is_active",
              "min_trade_amount",
              "tick_size"
            ],
            "properties": {
              "is_active": {
                "type": "boolean"
              },
              "min_trade_amount": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "ERC20TokenInfo": {
            "type": "object",
            "required": [
              "address",
              "decimals"
            ],
            "properties": {
              "address": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0.0
                }
              },
              "decimals": {
                "type": "integer",
                "format": "uint8",
                "minimum": 0.0
              }
            }
          },
          "EventContracts": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Single"
                ],
                "properties": {
                  "Single": {
                    "type": "object",
                    "required": [
                      "yes"
                    ],
                    "properties": {
                      "yes": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "yes_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "Dual"
                ],
                "properties": {
                  "Dual": {
                    "type": "object",
                    "required": [
                      "no",
                      "yes"
                    ],
                    "properties": {
                      "no": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "no_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "yes": {
                        "$ref": "#/definitions/ProductId"
                      },
                      "yes_alias": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Str"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExchangeMarketKind": {
            "type": "object",
            "required": [
              "base",
              "quote"
            ],
            "properties": {
              "base": {
                "$ref": "#/definitions/ProductId"
              },
              "quote": {
                "$ref": "#/definitions/ProductId"
              }
            }
          },
          "ExternalMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "FalconXMarketInfo": {
            "type": "object"
          },
          "GalaxyMarketInfo": {
            "type": "object",
            "required": [
              "tick_size"
            ],
            "properties": {
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "InstrumentType": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Inverse"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Linear"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Quanto"
                    ]
                  }
                }
              }
            ]
          },
          "KrakenMarketInfo": {
            "type": "object",
            "required": [
              "aclass_base",
              "aclass_quote",
              "altname",
              "base",
              "cost_decimals",
              "costmin",
              "fee_volume_currency",
              "lot_decimals",
              "lot_multiplier",
              "margin_call",
              "margin_stop",
              "ordermin",
              "pair_decimals",
              "quote",
              "status",
              "tick_size",
              "wsname"
            ],
            "properties": {
              "aclass_base": {
                "type": "string"
              },
              "aclass_quote": {
                "type": "string"
              },
              "altname": {
                "type": "string"
              },
              "base": {
                "type": "string"
              },
              "cost_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "costmin": {
                "$ref": "#/definitions/Decimal"
              },
              "fee_volume_currency": {
                "type": "string"
              },
              "long_position_limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "lot_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "lot_multiplier": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "margin_call": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "margin_stop": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "ordermin": {
                "$ref": "#/definitions/Decimal"
              },
              "pair_decimals": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "quote": {
                "type": "string"
              },
              "short_position_limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "status": {
                "$ref": "#/definitions/Status"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              },
              "wsname": {
                "type": "string"
              }
            }
          },
          "Market": {
            "type": "object",
            "required": [
              "exchange_symbol",
              "extra_info",
              "id",
              "kind",
              "name",
              "route",
              "venue"
            ],
            "properties": {
              "exchange_symbol": {
                "$ref": "#/definitions/Str"
              },
              "extra_info": {
                "$ref": "#/definitions/MarketInfo"
              },
              "id": {
                "$ref": "#/definitions/MarketId"
              },
              "kind": {
                "$ref": "#/definitions/MarketKind"
              },
              "name": {
                "$ref": "#/definitions/Str"
              },
              "route": {
                "$ref": "#/definitions/RouteId"
              },
              "venue": {
                "$ref": "#/definitions/VenueId"
              }
            }
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          },
          "MarketInfo": {
            "description": "Cpty-specific info about a market",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Test"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/TestMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "External"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/ExternalMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "B2C2"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/B2C2MarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Binance"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/BinanceMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Bybit"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/BybitMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CboeDigital"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CboeDigitalMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Coinbase"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CoinbaseMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "CoinbasePrime"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CoinbasePrimeMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Cqg"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CqgMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Cumberland"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/CumberlandMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "DYDX"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DYDXMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Databento"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DatabentoMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Deltix"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DeltixMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Deribit"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/DeribitMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "FalconX"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/FalconXMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Galaxy"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/GalaxyMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Kraken"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/KrakenMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Okx"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/OkxMarketInfo"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Wintermute"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/WintermuteMarketInfo"
                  }
                }
              }
            ]
          },
          "MarketKind": {
            "oneOf": [
              {
                "description": "A regular exchange trading pair, e.g. Coinbase BTC/USD",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Exchange"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/ExchangeMarketKind"
                  }
                }
              },
              {
                "description": "An unordered pool of products, e.g. a Uniswap pool or Curve 3-pool The type is still ordered for canonical naming purpose",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Pool"
                    ]
                  },
                  "value": {
                    "$ref": "#/definitions/PoolMarketKind"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OkxMarketInfo": {
            "type": "object",
            "required": [
              "min_sz",
              "tick_sz"
            ],
            "properties": {
              "min_sz": {
                "$ref": "#/definitions/Decimal"
              },
              "state": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tick_sz": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "PoolMarketKind": {
            "type": "object",
            "required": [
              "products"
            ],
            "properties": {
              "products": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ProductId"
                }
              }
            }
          },
          "Product": {
            "type": "object",
            "required": [
              "id",
              "kind",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/ProductId"
              },
              "kind": {
                "$ref": "#/definitions/ProductKind"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "ProductId": {
            "type": "string",
            "format": "uuid"
          },
          "ProductKind": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Coin"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "token_info"
                    ],
                    "properties": {
                      "token_info": {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/definitions/TokenInfo"
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "description": "The one guarantee for [underlying] if set is that it can be used to uniquely identify strips of related futures",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "opp_side_leg": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "same_side_leg": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "description": "The one guarantee for [underlying] if set is that it can be used to uniquely identify strips of related options",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "instrument_type": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/InstrumentType"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "multiplier": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/Decimal"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "description": "Event contracts are products akin to binary options which settle to an outcome of a future event.\n\nSpecific tradable event contracts are represented by the EventContract variant, e.g. FED-2024-SEP-CUT-25-YES and/or FED-2024-SEP-CUT-25-NO. for the YES and NO contracts of the \"Fed to cut 25 bps\" outcome. EventContract's are grouped into EventOutcome's, which pair the YES and NO contracts of an outcome together.  There are venues like KALSHI which have only one YES contract per outcome (the NO contract is implicit via short-selling the YES contract).\n\nEventOutcomes are grouped into Events, e.g. FED-2024-SEP is an Event with the following mutually exclusive outcomes:\n\n- FED-2024-SEP-HIKE - FED-2024-SEP-CUT-0 - FED-2024-SEP-CUT-25 - FED-2024-SEP-CUT-ABOVE-25\n\nEvents _may_ be grouped into EventSeries, e.g. all FED events belong to the same series of events.\n\nThe grouping of EventContracts into outcomes, events, and event series are indicative and mostly for display purposes, and don't necessarily imply anything about the settlement of individual event contracts.",
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventSeries"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Event"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "outcomes"
                    ],
                    "properties": {
                      "display_category": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "mutually_exclusive": {
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "outcomes": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/ProductId"
                        }
                      },
                      "series": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventOutcome"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "required": [
                      "contracts"
                    ],
                    "properties": {
                      "contracts": {
                        "$ref": "#/definitions/EventContracts"
                      },
                      "display_name": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "display_order": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "uint32",
                        "minimum": 0.0
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "value"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  },
                  "value": {
                    "type": "object",
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "underlying": {
                        "anyOf": [
                          {
                            "$ref": "#/definitions/ProductId"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "ProductType": {
            "type": "string",
            "enum": [
              "spot",
              "linear",
              "inverse",
              "option"
            ]
          },
          "Route": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/RouteId"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "RouteId": {
            "type": "string",
            "format": "uuid"
          },
          "Status": {
            "type": "string",
            "enum": [
              "Online",
              "CancelOnly",
              "PostOnly",
              "LimitOnly",
              "ReduceOnly"
            ]
          },
          "Str": {
            "description": "This is either an immediate containing the string data, if the length is less than 8, or a pointer into static memory that holds the actual str slice if the data length is greater than 7.\n\nEither way it is 1 word on the stack. In the case of an immediate the length as well as all the bytes are stored in that word, and there is no allocation on the heap. Otherwise the length, as well as the actual bytes of the string are stored on the heap in a compact allocation along with other strings of this type.\n\nThe maximum length of strings of this type is 255 characters. try_from will fail if a larger string is specified.\n\nIn either case Deref should be quite cheap, there is no locking to deref.\n\nIn the case of immediates there is never any locking. Otherwise, a global lock must be taken to hashcons the string and, if it isn't already present, insert it in the packed allocation.",
            "allOf": [
              {
                "$ref": "#/definitions/AsStr"
              }
            ]
          },
          "TestMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "TokenInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "ERC20"
                ],
                "properties": {
                  "ERC20": {
                    "$ref": "#/definitions/ERC20TokenInfo"
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "Venue": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/VenueId"
              },
              "name": {
                "$ref": "#/definitions/Str"
              }
            }
          },
          "VenueId": {
            "type": "string",
            "format": "uuid"
          },
          "WintermuteMarketInfo": {
            "type": "object",
            "required": [
              "is_delisted",
              "step_size",
              "tick_size"
            ],
            "properties": {
              "is_delisted": {
                "type": "boolean"
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/Decimal"
              }
            }
          }
        }
      }
    }
  ]
}

symbologyv2
{
  "$schema": "jsonschema",
  "name": "SymbologyV2",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.SymbologyV2/SymbologyV2",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyV2Request",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologySnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "execution_info",
          "marketdata_info",
          "options_series",
          "products",
          "sid",
          "sn",
          "tradable_products"
        ],
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "marketdata_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/MarketdataInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          },
          "sid": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tradable_products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/TradableProductInfo"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "$ref": "#/definitions/Decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size",
              "venue_raw_symbol"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "only_possible_quote_symbol": {
                "description": "For products or series, if there's only one possible quote symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MarketdataInfo": {
            "description": "Information about a symbol related to its marketdata source.",
            "type": "object",
            "required": [
              "marketdata_venue",
              "venue_raw_symbol"
            ],
            "properties": {
              "marketdata_venue": {
                "type": "string"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "$ref": "#/definitions/Decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "ProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "$ref": "#/definitions/Decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "$ref": "#/definitions/Decimal"
                            },
                            {
                              "$ref": "#/definitions/Decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          },
          "TradableProductInfo": {
            "type": "object",
            "required": [
              "quote"
            ],
            "properties": {
              "quote": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.SymbologyV2/SubscribeSymbologyV2",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeSymbologyV2",
        "type": "object"
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SymbologyUpdate",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "sid",
          "sn"
        ],
        "properties": {
          "execution_info": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate2_for_String_and_String_and_ExecutionInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "marketdata_info": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate2_for_String_and_String_and_MarketdataInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "options_series": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_OptionsSeriesInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "products": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_ProductInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "sid": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tradable_products": {
            "anyOf": [
              {
                "$ref": "#/definitions/SnapshotOrUpdate_for_String_and_TradableProductInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "AddOrRemove2_for_String_and_String_and_ExecutionInfo": {
            "oneOf": [
              {
                "description": "Information about a symbol related to its execution route.",
                "type": "object",
                "required": [
                  "execution_venue",
                  "is_delisted",
                  "min_order_quantity",
                  "min_order_quantity_unit",
                  "step_size",
                  "symbol",
                  "tick_size",
                  "type",
                  "venue_raw_symbol"
                ],
                "properties": {
                  "execution_venue": {
                    "type": "string"
                  },
                  "is_delisted": {
                    "type": "boolean"
                  },
                  "min_order_quantity": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "min_order_quantity_unit": {
                    "$ref": "#/definitions/MinOrderQuantityUnit"
                  },
                  "only_possible_quote_symbol": {
                    "description": "For products or series, if there's only one possible quote symbol",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "step_size": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "tick_size": {
                    "$ref": "#/definitions/TickSize"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "add"
                    ]
                  },
                  "venue_raw_symbol": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "symbol",
                  "type",
                  "venue"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "remove"
                    ]
                  },
                  "venue": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "AddOrRemove2_for_String_and_String_and_MarketdataInfo": {
            "oneOf": [
              {
                "description": "Information about a symbol related to its marketdata source.",
                "type": "object",
                "required": [
                  "marketdata_venue",
                  "symbol",
                  "type",
                  "venue_raw_symbol"
                ],
                "properties": {
                  "marketdata_venue": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "add"
                    ]
                  },
                  "venue_raw_symbol": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "symbol",
                  "type",
                  "venue"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "remove"
                    ]
                  },
                  "venue": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "AddOrRemove_for_String_and_OptionsSeriesInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "exercise_type",
                  "expiration_time_of_day",
                  "expiration_time_zone",
                  "is_cash_settled",
                  "multiplier",
                  "options_series",
                  "quote_symbol",
                  "strikes_by_expiration",
                  "symbol",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "exercise_type": {
                    "$ref": "#/definitions/OptionsExerciseType"
                  },
                  "expiration_time_of_day": {
                    "type": "string",
                    "format": "partial-date-time"
                  },
                  "expiration_time_zone": {
                    "$ref": "#/definitions/TimeZone"
                  },
                  "is_cash_settled": {
                    "type": "boolean"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "options_series": {
                    "type": "string"
                  },
                  "quote_symbol": {
                    "type": "string"
                  },
                  "strikes_by_expiration": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/Decimal"
                      },
                      "uniqueItems": true
                    }
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "add"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  },
                  "venue_discriminant": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "symbol",
                  "type"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "remove"
                    ]
                  }
                }
              }
            ]
          },
          "AddOrRemove_for_String_and_ProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Fiat"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Commodity"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Crypto"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Equity"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Index"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "derivative_kind",
                      "expiration",
                      "multiplier",
                      "type",
                      "underlying"
                    ],
                    "properties": {
                      "derivative_kind": {
                        "$ref": "#/definitions/DerivativeKind"
                      },
                      "expiration": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "first_notice_date": {
                        "default": null,
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date"
                      },
                      "multiplier": {
                        "$ref": "#/definitions/Decimal"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Future"
                        ]
                      },
                      "underlying": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "legs",
                      "type"
                    ],
                    "properties": {
                      "legs": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/SpreadLeg"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "FutureSpread"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "derivative_kind",
                      "multiplier",
                      "type",
                      "underlying"
                    ],
                    "properties": {
                      "derivative_kind": {
                        "$ref": "#/definitions/DerivativeKind"
                      },
                      "multiplier": {
                        "$ref": "#/definitions/Decimal"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Perpetual"
                        ]
                      },
                      "underlying": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "instance",
                      "series",
                      "type"
                    ],
                    "properties": {
                      "instance": {
                        "$ref": "#/definitions/OptionsSeriesInstance"
                      },
                      "series": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Option"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "instance",
                      "series",
                      "type"
                    ],
                    "properties": {
                      "instance": {
                        "$ref": "#/definitions/EventContractSeriesInstance"
                      },
                      "series": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "EventContract"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Unknown"
                        ]
                      }
                    }
                  }
                ],
                "required": [
                  "symbol",
                  "type"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "add"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "symbol",
                  "type"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "remove"
                    ]
                  }
                }
              }
            ]
          },
          "AddOrRemove_for_String_and_TradableProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "quote",
                  "symbol",
                  "type"
                ],
                "properties": {
                  "quote": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "add"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "symbol",
                  "type"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "remove"
                    ]
                  }
                }
              }
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "$ref": "#/definitions/Decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size",
              "venue_raw_symbol"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "only_possible_quote_symbol": {
                "description": "For products or series, if there's only one possible quote symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MarketdataInfo": {
            "description": "Information about a symbol related to its marketdata source.",
            "type": "object",
            "required": [
              "marketdata_venue",
              "venue_raw_symbol"
            ],
            "properties": {
              "marketdata_venue": {
                "type": "string"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "$ref": "#/definitions/Decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "ProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SnapshotOrUpdate2_for_String_and_String_and_ExecutionInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "snapshot",
                  "type"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/definitions/ExecutionInfo"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "snapshot"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "updates"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "update"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AddOrRemove2_for_String_and_String_and_ExecutionInfo"
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate2_for_String_and_String_and_MarketdataInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "snapshot",
                  "type"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/definitions/MarketdataInfo"
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "snapshot"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "updates"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "update"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AddOrRemove2_for_String_and_String_and_MarketdataInfo"
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_OptionsSeriesInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "snapshot",
                  "type"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/OptionsSeriesInfo"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "snapshot"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "updates"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "update"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AddOrRemove_for_String_and_OptionsSeriesInfo"
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_ProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "snapshot",
                  "type"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/ProductInfo"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "snapshot"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "updates"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "update"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AddOrRemove_for_String_and_ProductInfo"
                    }
                  }
                }
              }
            ]
          },
          "SnapshotOrUpdate_for_String_and_TradableProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "snapshot",
                  "type"
                ],
                "properties": {
                  "snapshot": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/definitions/TradableProductInfo"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "snapshot"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type",
                  "updates"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "update"
                    ]
                  },
                  "updates": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/AddOrRemove_for_String_and_TradableProductInfo"
                    }
                  }
                }
              }
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "$ref": "#/definitions/Decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "$ref": "#/definitions/Decimal"
                            },
                            {
                              "$ref": "#/definitions/Decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          },
          "TradableProductInfo": {
            "type": "object",
            "required": [
              "quote"
            ],
            "properties": {
              "quote": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.SymbologyV2/UploadSymbologyV2",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyV2Request",
        "type": "object",
        "properties": {
          "execution_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ExecutionInfo"
              }
            }
          },
          "marketdata_info": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/MarketdataInfo"
              }
            }
          },
          "options_series": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/OptionsSeriesInfo"
            }
          },
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProductInfo"
            }
          },
          "tradable_products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/TradableProductInfo"
            }
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "DerivativeKind": {
            "oneOf": [
              {
                "description": "Normal futures",
                "type": "string",
                "enum": [
                  "Linear"
                ]
              },
              {
                "description": "Futures settled in the base currency",
                "type": "string",
                "enum": [
                  "Inverse"
                ]
              },
              {
                "description": "Quote currency different from settle currency",
                "type": "string",
                "enum": [
                  "Quanto"
                ]
              }
            ]
          },
          "EventContractSeriesInstance": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "Enumerated"
                ],
                "properties": {
                  "Enumerated": {
                    "type": "object",
                    "required": [
                      "outcome"
                    ],
                    "properties": {
                      "outcome": {
                        "$ref": "#/definitions/Outcome"
                      }
                    }
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "object",
                "required": [
                  "OptionLike"
                ],
                "properties": {
                  "OptionLike": {
                    "type": "object",
                    "required": [
                      "strike"
                    ],
                    "properties": {
                      "expiration": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "date-time"
                      },
                      "strike": {
                        "$ref": "#/definitions/Decimal"
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "ExecutionInfo": {
            "description": "Information about a symbol related to its execution route.",
            "type": "object",
            "required": [
              "execution_venue",
              "is_delisted",
              "min_order_quantity",
              "min_order_quantity_unit",
              "step_size",
              "tick_size",
              "venue_raw_symbol"
            ],
            "properties": {
              "execution_venue": {
                "type": "string"
              },
              "is_delisted": {
                "type": "boolean"
              },
              "min_order_quantity": {
                "$ref": "#/definitions/Decimal"
              },
              "min_order_quantity_unit": {
                "$ref": "#/definitions/MinOrderQuantityUnit"
              },
              "only_possible_quote_symbol": {
                "description": "For products or series, if there's only one possible quote symbol",
                "type": [
                  "string",
                  "null"
                ]
              },
              "step_size": {
                "$ref": "#/definitions/Decimal"
              },
              "tick_size": {
                "$ref": "#/definitions/TickSize"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MarketdataInfo": {
            "description": "Information about a symbol related to its marketdata source.",
            "type": "object",
            "required": [
              "marketdata_venue",
              "venue_raw_symbol"
            ],
            "properties": {
              "marketdata_venue": {
                "type": "string"
              },
              "venue_raw_symbol": {
                "type": "string"
              }
            }
          },
          "MinOrderQuantityUnit": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "base"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "unit"
                ],
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "quote"
                    ]
                  }
                }
              }
            ]
          },
          "OptionsExerciseType": {
            "type": "string",
            "enum": [
              "american",
              "european",
              "unknown"
            ]
          },
          "OptionsSeriesInfo": {
            "type": "object",
            "required": [
              "derivative_kind",
              "exercise_type",
              "expiration_time_of_day",
              "expiration_time_zone",
              "is_cash_settled",
              "multiplier",
              "options_series",
              "quote_symbol",
              "strikes_by_expiration",
              "underlying"
            ],
            "properties": {
              "derivative_kind": {
                "$ref": "#/definitions/DerivativeKind"
              },
              "exercise_type": {
                "$ref": "#/definitions/OptionsExerciseType"
              },
              "expiration_time_of_day": {
                "type": "string",
                "format": "partial-date-time"
              },
              "expiration_time_zone": {
                "$ref": "#/definitions/TimeZone"
              },
              "is_cash_settled": {
                "type": "boolean"
              },
              "multiplier": {
                "$ref": "#/definitions/Decimal"
              },
              "options_series": {
                "type": "string"
              },
              "quote_symbol": {
                "type": "string"
              },
              "strikes_by_expiration": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "uniqueItems": true
                }
              },
              "underlying": {
                "type": "string"
              },
              "venue_discriminant": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "OptionsSeriesInstance": {
            "description": "A specific option from a series.",
            "type": "object",
            "required": [
              "expiration",
              "put_or_call",
              "strike"
            ],
            "properties": {
              "expiration": {
                "type": "string",
                "format": "date-time"
              },
              "put_or_call": {
                "$ref": "#/definitions/PutOrCall"
              },
              "strike": {
                "$ref": "#/definitions/Decimal"
              }
            }
          },
          "Outcome": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "ProductInfo": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Fiat"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Commodity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Crypto"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Equity"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Index"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "expiration",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "expiration": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "first_notice_date": {
                    "default": null,
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Future"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "legs",
                  "type"
                ],
                "properties": {
                  "legs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/SpreadLeg"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "FutureSpread"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "derivative_kind",
                  "multiplier",
                  "type",
                  "underlying"
                ],
                "properties": {
                  "derivative_kind": {
                    "$ref": "#/definitions/DerivativeKind"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Perpetual"
                    ]
                  },
                  "underlying": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/OptionsSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Option"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "instance",
                  "series",
                  "type"
                ],
                "properties": {
                  "instance": {
                    "$ref": "#/definitions/EventContractSeriesInstance"
                  },
                  "series": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "EventContract"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "Unknown"
                    ]
                  }
                }
              }
            ]
          },
          "PutOrCall": {
            "type": "string",
            "enum": [
              "P",
              "C"
            ]
          },
          "SpreadLeg": {
            "type": "object",
            "required": [
              "product",
              "quantity"
            ],
            "properties": {
              "product": {
                "type": "string"
              },
              "quantity": {
                "description": "Some spreads have different ratios for their legs, like buy 1 A, sell 2 B, buy 1 C; We would represent that with quantities in the legs: 1, -2, 1",
                "allOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  }
                ]
              }
            }
          },
          "TickSize": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "simple"
                ],
                "properties": {
                  "simple": {
                    "$ref": "#/definitions/Decimal"
                  }
                },
                "additionalProperties": false
              },
              {
                "description": "List of (threshold, tick_size) pairs.  For price greater than or equal to each threshold, the tick size is the corresponding value.",
                "type": "object",
                "required": [
                  "varying"
                ],
                "properties": {
                  "varying": {
                    "type": "object",
                    "required": [
                      "thresholds"
                    ],
                    "properties": {
                      "thresholds": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": [
                            {
                              "$ref": "#/definitions/Decimal"
                            },
                            {
                              "$ref": "#/definitions/Decimal"
                            }
                          ],
                          "maxItems": 2,
                          "minItems": 2
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            ]
          },
          "TimeZone": {
            "type": "string",
            "enum": [
              "Africa/Abidjan",
              "Africa/Accra",
              "Africa/Addis_Ababa",
              "Africa/Algiers",
              "Africa/Asmara",
              "Africa/Asmera",
              "Africa/Bamako",
              "Africa/Bangui",
              "Africa/Banjul",
              "Africa/Bissau",
              "Africa/Blantyre",
              "Africa/Brazzaville",
              "Africa/Bujumbura",
              "Africa/Cairo",
              "Africa/Casablanca",
              "Africa/Ceuta",
              "Africa/Conakry",
              "Africa/Dakar",
              "Africa/Dar_es_Salaam",
              "Africa/Djibouti",
              "Africa/Douala",
              "Africa/El_Aaiun",
              "Africa/Freetown",
              "Africa/Gaborone",
              "Africa/Harare",
              "Africa/Johannesburg",
              "Africa/Juba",
              "Africa/Kampala",
              "Africa/Khartoum",
              "Africa/Kigali",
              "Africa/Kinshasa",
              "Africa/Lagos",
              "Africa/Libreville",
              "Africa/Lome",
              "Africa/Luanda",
              "Africa/Lubumbashi",
              "Africa/Lusaka",
              "Africa/Malabo",
              "Africa/Maputo",
              "Africa/Maseru",
              "Africa/Mbabane",
              "Africa/Mogadishu",
              "Africa/Monrovia",
              "Africa/Nairobi",
              "Africa/Ndjamena",
              "Africa/Niamey",
              "Africa/Nouakchott",
              "Africa/Ouagadougou",
              "Africa/Porto-Novo",
              "Africa/Sao_Tome",
              "Africa/Timbuktu",
              "Africa/Tripoli",
              "Africa/Tunis",
              "Africa/Windhoek",
              "America/Adak",
              "America/Anchorage",
              "America/Anguilla",
              "America/Antigua",
              "America/Araguaina",
              "America/Argentina/Buenos_Aires",
              "America/Argentina/Catamarca",
              "America/Argentina/ComodRivadavia",
              "America/Argentina/Cordoba",
              "America/Argentina/Jujuy",
              "America/Argentina/La_Rioja",
              "America/Argentina/Mendoza",
              "America/Argentina/Rio_Gallegos",
              "America/Argentina/Salta",
              "America/Argentina/San_Juan",
              "America/Argentina/San_Luis",
              "America/Argentina/Tucuman",
              "America/Argentina/Ushuaia",
              "America/Aruba",
              "America/Asuncion",
              "America/Atikokan",
              "America/Atka",
              "America/Bahia",
              "America/Bahia_Banderas",
              "America/Barbados",
              "America/Belem",
              "America/Belize",
              "America/Blanc-Sablon",
              "America/Boa_Vista",
              "America/Bogota",
              "America/Boise",
              "America/Buenos_Aires",
              "America/Cambridge_Bay",
              "America/Campo_Grande",
              "America/Cancun",
              "America/Caracas",
              "America/Catamarca",
              "America/Cayenne",
              "America/Cayman",
              "America/Chicago",
              "America/Chihuahua",
              "America/Ciudad_Juarez",
              "America/Coral_Harbour",
              "America/Cordoba",
              "America/Costa_Rica",
              "America/Creston",
              "America/Cuiaba",
              "America/Curacao",
              "America/Danmarkshavn",
              "America/Dawson",
              "America/Dawson_Creek",
              "America/Denver",
              "America/Detroit",
              "America/Dominica",
              "America/Edmonton",
              "America/Eirunepe",
              "America/El_Salvador",
              "America/Ensenada",
              "America/Fort_Nelson",
              "America/Fort_Wayne",
              "America/Fortaleza",
              "America/Glace_Bay",
              "America/Godthab",
              "America/Goose_Bay",
              "America/Grand_Turk",
              "America/Grenada",
              "America/Guadeloupe",
              "America/Guatemala",
              "America/Guayaquil",
              "America/Guyana",
              "America/Halifax",
              "America/Havana",
              "America/Hermosillo",
              "America/Indiana/Indianapolis",
              "America/Indiana/Knox",
              "America/Indiana/Marengo",
              "America/Indiana/Petersburg",
              "America/Indiana/Tell_City",
              "America/Indiana/Vevay",
              "America/Indiana/Vincennes",
              "America/Indiana/Winamac",
              "America/Indianapolis",
              "America/Inuvik",
              "America/Iqaluit",
              "America/Jamaica",
              "America/Jujuy",
              "America/Juneau",
              "America/Kentucky/Louisville",
              "America/Kentucky/Monticello",
              "America/Knox_IN",
              "America/Kralendijk",
              "America/La_Paz",
              "America/Lima",
              "America/Los_Angeles",
              "America/Louisville",
              "America/Lower_Princes",
              "America/Maceio",
              "America/Managua",
              "America/Manaus",
              "America/Marigot",
              "America/Martinique",
              "America/Matamoros",
              "America/Mazatlan",
              "America/Mendoza",
              "America/Menominee",
              "America/Merida",
              "America/Metlakatla",
              "America/Mexico_City",
              "America/Miquelon",
              "America/Moncton",
              "America/Monterrey",
              "America/Montevideo",
              "America/Montreal",
              "America/Montserrat",
              "America/Nassau",
              "America/New_York",
              "America/Nipigon",
              "America/Nome",
              "America/Noronha",
              "America/North_Dakota/Beulah",
              "America/North_Dakota/Center",
              "America/North_Dakota/New_Salem",
              "America/Nuuk",
              "America/Ojinaga",
              "America/Panama",
              "America/Pangnirtung",
              "America/Paramaribo",
              "America/Phoenix",
              "America/Port-au-Prince",
              "America/Port_of_Spain",
              "America/Porto_Acre",
              "America/Porto_Velho",
              "America/Puerto_Rico",
              "America/Punta_Arenas",
              "America/Rainy_River",
              "America/Rankin_Inlet",
              "America/Recife",
              "America/Regina",
              "America/Resolute",
              "America/Rio_Branco",
              "America/Rosario",
              "America/Santa_Isabel",
              "America/Santarem",
              "America/Santiago",
              "America/Santo_Domingo",
              "America/Sao_Paulo",
              "America/Scoresbysund",
              "America/Shiprock",
              "America/Sitka",
              "America/St_Barthelemy",
              "America/St_Johns",
              "America/St_Kitts",
              "America/St_Lucia",
              "America/St_Thomas",
              "America/St_Vincent",
              "America/Swift_Current",
              "America/Tegucigalpa",
              "America/Thule",
              "America/Thunder_Bay",
              "America/Tijuana",
              "America/Toronto",
              "America/Tortola",
              "America/Vancouver",
              "America/Virgin",
              "America/Whitehorse",
              "America/Winnipeg",
              "America/Yakutat",
              "America/Yellowknife",
              "Antarctica/Casey",
              "Antarctica/Davis",
              "Antarctica/DumontDUrville",
              "Antarctica/Macquarie",
              "Antarctica/Mawson",
              "Antarctica/McMurdo",
              "Antarctica/Palmer",
              "Antarctica/Rothera",
              "Antarctica/South_Pole",
              "Antarctica/Syowa",
              "Antarctica/Troll",
              "Antarctica/Vostok",
              "Arctic/Longyearbyen",
              "Asia/Aden",
              "Asia/Almaty",
              "Asia/Amman",
              "Asia/Anadyr",
              "Asia/Aqtau",
              "Asia/Aqtobe",
              "Asia/Ashgabat",
              "Asia/Ashkhabad",
              "Asia/Atyrau",
              "Asia/Baghdad",
              "Asia/Bahrain",
              "Asia/Baku",
              "Asia/Bangkok",
              "Asia/Barnaul",
              "Asia/Beirut",
              "Asia/Bishkek",
              "Asia/Brunei",
              "Asia/Calcutta",
              "Asia/Chita",
              "Asia/Choibalsan",
              "Asia/Chongqing",
              "Asia/Chungking",
              "Asia/Colombo",
              "Asia/Dacca",
              "Asia/Damascus",
              "Asia/Dhaka",
              "Asia/Dili",
              "Asia/Dubai",
              "Asia/Dushanbe",
              "Asia/Famagusta",
              "Asia/Gaza",
              "Asia/Harbin",
              "Asia/Hebron",
              "Asia/Ho_Chi_Minh",
              "Asia/Hong_Kong",
              "Asia/Hovd",
              "Asia/Irkutsk",
              "Asia/Istanbul",
              "Asia/Jakarta",
              "Asia/Jayapura",
              "Asia/Jerusalem",
              "Asia/Kabul",
              "Asia/Kamchatka",
              "Asia/Karachi",
              "Asia/Kashgar",
              "Asia/Kathmandu",
              "Asia/Katmandu",
              "Asia/Khandyga",
              "Asia/Kolkata",
              "Asia/Krasnoyarsk",
              "Asia/Kuala_Lumpur",
              "Asia/Kuching",
              "Asia/Kuwait",
              "Asia/Macao",
              "Asia/Macau",
              "Asia/Magadan",
              "Asia/Makassar",
              "Asia/Manila",
              "Asia/Muscat",
              "Asia/Nicosia",
              "Asia/Novokuznetsk",
              "Asia/Novosibirsk",
              "Asia/Omsk",
              "Asia/Oral",
              "Asia/Phnom_Penh",
              "Asia/Pontianak",
              "Asia/Pyongyang",
              "Asia/Qatar",
              "Asia/Qostanay",
              "Asia/Qyzylorda",
              "Asia/Rangoon",
              "Asia/Riyadh",
              "Asia/Saigon",
              "Asia/Sakhalin",
              "Asia/Samarkand",
              "Asia/Seoul",
              "Asia/Shanghai",
              "Asia/Singapore",
              "Asia/Srednekolymsk",
              "Asia/Taipei",
              "Asia/Tashkent",
              "Asia/Tbilisi",
              "Asia/Tehran",
              "Asia/Tel_Aviv",
              "Asia/Thimbu",
              "Asia/Thimphu",
              "Asia/Tokyo",
              "Asia/Tomsk",
              "Asia/Ujung_Pandang",
              "Asia/Ulaanbaatar",
              "Asia/Ulan_Bator",
              "Asia/Urumqi",
              "Asia/Ust-Nera",
              "Asia/Vientiane",
              "Asia/Vladivostok",
              "Asia/Yakutsk",
              "Asia/Yangon",
              "Asia/Yekaterinburg",
              "Asia/Yerevan",
              "Atlantic/Azores",
              "Atlantic/Bermuda",
              "Atlantic/Canary",
              "Atlantic/Cape_Verde",
              "Atlantic/Faeroe",
              "Atlantic/Faroe",
              "Atlantic/Jan_Mayen",
              "Atlantic/Madeira",
              "Atlantic/Reykjavik",
              "Atlantic/South_Georgia",
              "Atlantic/St_Helena",
              "Atlantic/Stanley",
              "Australia/ACT",
              "Australia/Adelaide",
              "Australia/Brisbane",
              "Australia/Broken_Hill",
              "Australia/Canberra",
              "Australia/Currie",
              "Australia/Darwin",
              "Australia/Eucla",
              "Australia/Hobart",
              "Australia/LHI",
              "Australia/Lindeman",
              "Australia/Lord_Howe",
              "Australia/Melbourne",
              "Australia/NSW",
              "Australia/North",
              "Australia/Perth",
              "Australia/Queensland",
              "Australia/South",
              "Australia/Sydney",
              "Australia/Tasmania",
              "Australia/Victoria",
              "Australia/West",
              "Australia/Yancowinna",
              "Brazil/Acre",
              "Brazil/DeNoronha",
              "Brazil/East",
              "Brazil/West",
              "CET",
              "CST6CDT",
              "Canada/Atlantic",
              "Canada/Central",
              "Canada/Eastern",
              "Canada/Mountain",
              "Canada/Newfoundland",
              "Canada/Pacific",
              "Canada/Saskatchewan",
              "Canada/Yukon",
              "Chile/Continental",
              "Chile/EasterIsland",
              "Cuba",
              "EET",
              "EST",
              "EST5EDT",
              "Egypt",
              "Eire",
              "Etc/GMT",
              "Etc/GMT+0",
              "Etc/GMT+1",
              "Etc/GMT+10",
              "Etc/GMT+11",
              "Etc/GMT+12",
              "Etc/GMT+2",
              "Etc/GMT+3",
              "Etc/GMT+4",
              "Etc/GMT+5",
              "Etc/GMT+6",
              "Etc/GMT+7",
              "Etc/GMT+8",
              "Etc/GMT+9",
              "Etc/GMT-0",
              "Etc/GMT-1",
              "Etc/GMT-10",
              "Etc/GMT-11",
              "Etc/GMT-12",
              "Etc/GMT-13",
              "Etc/GMT-14",
              "Etc/GMT-2",
              "Etc/GMT-3",
              "Etc/GMT-4",
              "Etc/GMT-5",
              "Etc/GMT-6",
              "Etc/GMT-7",
              "Etc/GMT-8",
              "Etc/GMT-9",
              "Etc/GMT0",
              "Etc/Greenwich",
              "Etc/UCT",
              "Etc/UTC",
              "Etc/Universal",
              "Etc/Zulu",
              "Europe/Amsterdam",
              "Europe/Andorra",
              "Europe/Astrakhan",
              "Europe/Athens",
              "Europe/Belfast",
              "Europe/Belgrade",
              "Europe/Berlin",
              "Europe/Bratislava",
              "Europe/Brussels",
              "Europe/Bucharest",
              "Europe/Budapest",
              "Europe/Busingen",
              "Europe/Chisinau",
              "Europe/Copenhagen",
              "Europe/Dublin",
              "Europe/Gibraltar",
              "Europe/Guernsey",
              "Europe/Helsinki",
              "Europe/Isle_of_Man",
              "Europe/Istanbul",
              "Europe/Jersey",
              "Europe/Kaliningrad",
              "Europe/Kiev",
              "Europe/Kirov",
              "Europe/Kyiv",
              "Europe/Lisbon",
              "Europe/Ljubljana",
              "Europe/London",
              "Europe/Luxembourg",
              "Europe/Madrid",
              "Europe/Malta",
              "Europe/Mariehamn",
              "Europe/Minsk",
              "Europe/Monaco",
              "Europe/Moscow",
              "Europe/Nicosia",
              "Europe/Oslo",
              "Europe/Paris",
              "Europe/Podgorica",
              "Europe/Prague",
              "Europe/Riga",
              "Europe/Rome",
              "Europe/Samara",
              "Europe/San_Marino",
              "Europe/Sarajevo",
              "Europe/Saratov",
              "Europe/Simferopol",
              "Europe/Skopje",
              "Europe/Sofia",
              "Europe/Stockholm",
              "Europe/Tallinn",
              "Europe/Tirane",
              "Europe/Tiraspol",
              "Europe/Ulyanovsk",
              "Europe/Uzhgorod",
              "Europe/Vaduz",
              "Europe/Vatican",
              "Europe/Vienna",
              "Europe/Vilnius",
              "Europe/Volgograd",
              "Europe/Warsaw",
              "Europe/Zagreb",
              "Europe/Zaporozhye",
              "Europe/Zurich",
              "GB",
              "GB-Eire",
              "GMT",
              "GMT+0",
              "GMT-0",
              "GMT0",
              "Greenwich",
              "HST",
              "Hongkong",
              "Iceland",
              "Indian/Antananarivo",
              "Indian/Chagos",
              "Indian/Christmas",
              "Indian/Cocos",
              "Indian/Comoro",
              "Indian/Kerguelen",
              "Indian/Mahe",
              "Indian/Maldives",
              "Indian/Mauritius",
              "Indian/Mayotte",
              "Indian/Reunion",
              "Iran",
              "Israel",
              "Jamaica",
              "Japan",
              "Kwajalein",
              "Libya",
              "MET",
              "MST",
              "MST7MDT",
              "Mexico/BajaNorte",
              "Mexico/BajaSur",
              "Mexico/General",
              "NZ",
              "NZ-CHAT",
              "Navajo",
              "PRC",
              "PST8PDT",
              "Pacific/Apia",
              "Pacific/Auckland",
              "Pacific/Bougainville",
              "Pacific/Chatham",
              "Pacific/Chuuk",
              "Pacific/Easter",
              "Pacific/Efate",
              "Pacific/Enderbury",
              "Pacific/Fakaofo",
              "Pacific/Fiji",
              "Pacific/Funafuti",
              "Pacific/Galapagos",
              "Pacific/Gambier",
              "Pacific/Guadalcanal",
              "Pacific/Guam",
              "Pacific/Honolulu",
              "Pacific/Johnston",
              "Pacific/Kanton",
              "Pacific/Kiritimati",
              "Pacific/Kosrae",
              "Pacific/Kwajalein",
              "Pacific/Majuro",
              "Pacific/Marquesas",
              "Pacific/Midway",
              "Pacific/Nauru",
              "Pacific/Niue",
              "Pacific/Norfolk",
              "Pacific/Noumea",
              "Pacific/Pago_Pago",
              "Pacific/Palau",
              "Pacific/Pitcairn",
              "Pacific/Pohnpei",
              "Pacific/Ponape",
              "Pacific/Port_Moresby",
              "Pacific/Rarotonga",
              "Pacific/Saipan",
              "Pacific/Samoa",
              "Pacific/Tahiti",
              "Pacific/Tarawa",
              "Pacific/Tongatapu",
              "Pacific/Truk",
              "Pacific/Wake",
              "Pacific/Wallis",
              "Pacific/Yap",
              "Poland",
              "Portugal",
              "ROC",
              "ROK",
              "Singapore",
              "Turkey",
              "UCT",
              "US/Alaska",
              "US/Aleutian",
              "US/Arizona",
              "US/Central",
              "US/East-Indiana",
              "US/Eastern",
              "US/Hawaii",
              "US/Indiana-Starke",
              "US/Michigan",
              "US/Mountain",
              "US/Pacific",
              "US/Samoa",
              "UTC",
              "Universal",
              "W-SU",
              "WET",
              "Zulu"
            ]
          },
          "TradableProductInfo": {
            "type": "object",
            "required": [
              "quote"
            ],
            "properties": {
              "quote": {
                "type": "string"
              }
            }
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "UploadSymbologyV2Response",
        "type": "object"
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.SymbologyV2/PruneExpiredSymbols",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsRequest",
        "type": "object",
        "properties": {
          "cutoff": {
            "description": "If None then it will just use server current time; otherwise, specify a unix timestamp in seconds",
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "PruneExpiredSymbolsResponse",
        "type": "object"
      }
    }
  ]
}

marketdata
{
  "$schema": "jsonschema",
  "name": "Marketdata",
  "rpcs": [
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "$ref": "#/definitions/Decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "$ref": "#/definitions/Decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "e": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "n": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "market_ids": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/MarketId"
            }
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Array_of_L1BookSnapshot",
        "type": "array",
        "items": {
          "$ref": "#/definitions/L1BookSnapshot"
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "L1BookSnapshot": {
            "type": "object",
            "required": [
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "$ref": "#/definitions/Decimal"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "b": {
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "$ref": "#/definitions/Decimal"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              },
              "e": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "m": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/MarketId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "n": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint64",
                "minimum": 0.0
              },
              "s": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL1BookSnapshots",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL1BookSnapshotsRequest",
        "type": "object",
        "properties": {
          "market_ids": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/MarketId"
            }
          },
          "symbols": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L1BookSnapshot",
        "type": "object",
        "required": [
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "$ref": "#/definitions/Decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "b": {
            "type": [
              "array",
              "null"
            ],
            "items": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "$ref": "#/definitions/Decimal"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          },
          "e": {
            "type": [
              "integer",
              "null"
            ],
            "format": "int64"
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "n": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint64",
            "minimum": 0.0
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeL2BookUpdates",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeL2BookUpdatesRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookUpdate",
        "description": "To build a book from a stream of updates, the client should first subscribe to this update stream, which then returns a stream starting with a snapshot and following with diffs.\n\nDiffs should be applied consecutively to the snapshot in order to reconstruct the state of the book.\n\n```rust # use architect_api::external::marketdata::*; # use std::collections::BTreeMap; # use rust_decimal::Decimal; # use rust_decimal_macros::dec;\n\n/// Suppose we receive this snapshot from the server: let snapshot: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"s\", \"ts\": 1729700837, \"tn\": 0, \"sid\": 123, \"sn\": 8999, \"b\": [[\"99.00\", \"3\"], [\"98.78\", \"2\"]], \"a\": [[\"100.00\", \"1\"], [\"100.10\", \"2\"]] }\"#)?;\n\n/// It corresponds to the following book: let mut book = BTreeMap::new(); book.insert(dec!(99.00), 3); book.insert(dec!(98.78), 2); book.insert(dec!(100.00), 1); book.insert(dec!(100.10), 2);\n\n/// Then we receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700839, \"tn\": 0, \"sid\": 123, \"sn\": 9000, \"b\": [[\"99.00\", \"1\"]], \"a\": [] }\"#)?;\n\n/// Verify that the sequence number is correct assert!(diff.sequence().is_next_in_sequence(&snapshot.sequence()));\n\n/// Apply the update to our book book.insert(dec!(99.00), 1);\n\n// Suppose we then receive this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 123, \"sn\": 9005, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// We shouldn't apply this update because it's not next in sequence! assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n/// Or if we had received this update: let diff: L2BookUpdate = serde_json::from_str(r#\"{ \"t\": \"d\", \"ts\": 1729700841, \"tn\": 0, \"sid\": 170, \"sn\": 9001, \"b\": [], \"a\": [[\"103.00\", \"1\"]] }\"#)?;\n\n/// It appears that the sequence id is changed, signalling a new sequence. /// In this case, we should re-request the snapshot from the server. assert_eq!(diff.sequence().is_next_in_sequence(&snapshot.sequence()), false);\n\n# Ok::<(), anyhow::Error>(()) ```",
        "oneOf": [
          {
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "sn": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "s"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "description": "Unique sequence id and number.",
            "type": "object",
            "required": [
              "a",
              "b",
              "sid",
              "sn",
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "a": {
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "b": {
                "description": "Set of (price, level) updates. If zero, the price level has been removed from the book.",
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "$ref": "#/definitions/Decimal"
                    },
                    {
                      "$ref": "#/definitions/Decimal"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "sid": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "sn": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              },
              "t": {
                "type": "string",
                "enum": [
                  "d"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/L2BookSnapshot",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshotRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "L2BookSnapshot",
        "description": "Unique sequence id and number.",
        "type": "object",
        "required": [
          "a",
          "b",
          "sid",
          "sn",
          "tn",
          "ts"
        ],
        "properties": {
          "a": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "$ref": "#/definitions/Decimal"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "b": {
            "type": "array",
            "items": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "$ref": "#/definitions/Decimal"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "sid": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "sn": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeCandlesRequest",
        "type": "object",
        "properties": {
          "candle_width": {
            "description": "If None, subscribe from all candle widths on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/CandleWidth"
            }
          },
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "c",
          "h",
          "l",
          "o",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ah": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "al": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ao": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "av": {
            "$ref": "#/definitions/Decimal"
          },
          "bc": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bh": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bl": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bo": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bv": {
            "$ref": "#/definitions/Decimal"
          },
          "c": {
            "$ref": "#/definitions/Decimal"
          },
          "h": {
            "$ref": "#/definitions/Decimal"
          },
          "l": {
            "$ref": "#/definitions/Decimal"
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "mc": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mh": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ml": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mo": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "$ref": "#/definitions/Decimal"
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "$ref": "#/definitions/Decimal"
          },
          "w": {
            "$ref": "#/definitions/CandleWidth"
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeManyCandles",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeManyCandlesRequest",
        "type": "object",
        "required": [
          "candle_width"
        ],
        "properties": {
          "candle_width": {
            "$ref": "#/definitions/CandleWidth"
          },
          "market_ids": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/MarketId"
            }
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Candle",
        "type": "object",
        "required": [
          "av",
          "bv",
          "c",
          "h",
          "l",
          "o",
          "tn",
          "ts",
          "v",
          "w"
        ],
        "properties": {
          "ac": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ah": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "al": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ao": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "av": {
            "$ref": "#/definitions/Decimal"
          },
          "bc": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bh": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bl": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bo": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "bv": {
            "$ref": "#/definitions/Decimal"
          },
          "c": {
            "$ref": "#/definitions/Decimal"
          },
          "h": {
            "$ref": "#/definitions/Decimal"
          },
          "l": {
            "$ref": "#/definitions/Decimal"
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "mc": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mh": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "ml": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "mo": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "$ref": "#/definitions/Decimal"
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          },
          "v": {
            "$ref": "#/definitions/Decimal"
          },
          "w": {
            "$ref": "#/definitions/CandleWidth"
          }
        },
        "definitions": {
          "CandleWidth": {
            "type": "integer",
            "enum": [
              1,
              2,
              4,
              8,
              16,
              32
            ],
            "x-enumNames": [
              "OneSecond",
              "FiveSecond",
              "OneMinute",
              "FifteenMinute",
              "OneHour",
              "OneDay"
            ]
          },
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTrades",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTradesRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "description": "If None, subscribe from all symbols on the feed",
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Trade",
        "type": "object",
        "required": [
          "p",
          "q",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "anyOf": [
              {
                "$ref": "#/definitions/Dir"
              },
              {
                "type": "null"
              }
            ]
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "p": {
            "$ref": "#/definitions/Decimal"
          },
          "q": {
            "$ref": "#/definitions/Decimal"
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "Buy",
              "Sell"
            ]
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/MarketStatus",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatusRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "MarketStatus",
        "type": "object",
        "properties": {
          "is_trading": {
            "type": [
              "boolean",
              "null"
            ]
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/Ticker",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerRequest",
        "type": "object",
        "properties": {
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Ticker",
        "type": "object",
        "properties": {
          "h": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "l": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "o": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "oi": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "v": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          },
          "vm": {
            "anyOf": [
              {
                "$ref": "#/definitions/Decimal"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeTickers",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeTickersRequest",
        "description": "Ticker updates are not strongly ordered because the data is considered more casual.  You may receive diffs or snapshots slightly out of order.",
        "type": "object",
        "properties": {
          "market_ids": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/MarketId"
            }
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "TickerUpdate",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "t"
            ],
            "properties": {
              "h": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "m": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/MarketId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oi": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "s"
                ]
              },
              "v": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "vm": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "t",
              "tn",
              "ts"
            ],
            "properties": {
              "h": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "l": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "m": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/MarketId"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "o": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "oi": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "s": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "t": {
                "type": "string",
                "enum": [
                  "d"
                ]
              },
              "tn": {
                "type": "integer",
                "format": "uint32",
                "minimum": 0.0
              },
              "ts": {
                "type": "integer",
                "format": "int64"
              },
              "v": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "vm": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Decimal"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ],
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "stream",
      "route": "/json.architect.Marketdata/SubscribeLiquidations",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "SubscribeLiquidationsRequest",
        "type": "object",
        "properties": {
          "market_ids": {
            "description": "If None, subscribe from all symbols on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "$ref": "#/definitions/MarketId"
            }
          },
          "symbols": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Liquidation",
        "type": "object",
        "required": [
          "d",
          "p",
          "q",
          "tn",
          "ts"
        ],
        "properties": {
          "d": {
            "$ref": "#/definitions/Dir"
          },
          "m": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "p": {
            "$ref": "#/definitions/Decimal"
          },
          "q": {
            "$ref": "#/definitions/Decimal"
          },
          "s": {
            "type": [
              "string",
              "null"
            ]
          },
          "tn": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "ts": {
            "type": "integer",
            "format": "int64"
          }
        },
        "definitions": {
          "Decimal": {
            "type": "string"
          },
          "Dir": {
            "description": "An order side/direction or a trade execution side/direction. In GraphQL these are serialized as \"buy\" or \"sell\".",
            "type": "string",
            "enum": [
              "Buy",
              "Sell"
            ]
          },
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    {
      "type": "unary",
      "route": "/json.architect.Marketdata/ExchangeSpecificFields",
      "request_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "ExchangeSpecificFieldsRequest",
        "type": "object",
        "properties": {
          "fields": {
            "description": "If None, subscribe from all exchange-specific fields on the feed",
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            }
          },
          "market_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/MarketId"
              },
              {
                "type": "null"
              }
            ]
          },
          "symbol": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "definitions": {
          "MarketId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "response_type": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Map_of_AnyValue",
        "type": "object",
        "additionalProperties": true
      }
    }
  ]
}

